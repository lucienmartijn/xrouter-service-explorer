{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/check-login-intializer.ts","webpack:///./src/app/error/error.component.css","webpack:///./src/app/error/error.component.html","webpack:///./src/app/error/error.component.ts","webpack:///./src/app/footer/footer.component.css","webpack:///./src/app/footer/footer.component.html","webpack:///./src/app/footer/footer.component.ts","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/interceptors.ts","webpack:///./src/app/nav-menu/nav-menu.component.css","webpack:///./src/app/nav-menu/nav-menu.component.html","webpack:///./src/app/nav-menu/nav-menu.component.ts","webpack:///./src/app/page-not-found/page-not-found.component.css","webpack:///./src/app/page-not-found/page-not-found.component.html","webpack:///./src/app/page-not-found/page-not-found.component.ts","webpack:///./src/app/rpc-console/rpc-console.component.css","webpack:///./src/app/rpc-console/rpc-console.component.html","webpack:///./src/app/rpc-console/rpc-console.component.ts","webpack:///./src/app/search-form/search-form.component.css","webpack:///./src/app/search-form/search-form.component.html","webpack:///./src/app/search-form/search-form.component.ts","webpack:///./src/app/service-list/service-list.component.ts","webpack:///./src/app/service-node-list/service-node-list.component.css","webpack:///./src/app/service-node-list/service-node-list.component.html","webpack:///./src/app/service-node-list/service-node-list.component.ts","webpack:///./src/app/shared/error-handling/http-error.interceptor.ts","webpack:///./src/app/shared/http-responsetime-logging/http-responsetime-logging.interceptor.ts","webpack:///./src/app/shared/pagination/pagination.component.ts","webpack:///./src/app/shared/services/account.service.ts","webpack:///./src/app/shared/services/base.service.ts","webpack:///./src/app/shared/services/configuration.service.ts","webpack:///./src/app/shared/services/navigator.service..ts","webpack:///./src/app/shared/services/responsetime.service.ts","webpack:///./src/app/shared/services/search.service.ts","webpack:///./src/app/shared/services/xrouter.service.ts","webpack:///./src/app/sign-in/sign-in.component.css","webpack:///./src/app/sign-in/sign-in.component.html","webpack:///./src/app/sign-in/sign-in.component.ts","webpack:///./src/app/spv-wallets/spv-wallets.component.css","webpack:///./src/app/spv-wallets/spv-wallets.component.html","webpack:///./src/app/spv-wallets/spv-wallets.component.ts","webpack:///./src/app/view-snode/view-snode.component.css","webpack:///./src/app/view-snode/view-snode.component.html","webpack:///./src/app/view-snode/view-snode.component.ts","webpack:///./src/app/view-spv-wallet/view-spv-wallet.component.css","webpack:///./src/app/view-spv-wallet/view-spv-wallet.component.html","webpack:///./src/app/view-spv-wallet/view-spv-wallet.component.ts","webpack:///./src/app/view-xr-service/view-xr-service.component.css","webpack:///./src/app/view-xr-service/view-xr-service.component.html","webpack:///./src/app/view-xr-service/view-xr-service.component.ts","webpack:///./src/app/xr-services/xr-services.component.css","webpack:///./src/app/xr-services/xr-services.component.html","webpack:///./src/app/xr-services/xr-services.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"@media (max-width: 767px) {\\r\\n  /* On small screens, the nav menu spans the full width of the screen. Leave a space for it. */\\r\\n  .body-content {\\r\\n    padding-top: 50px;\\r\\n  }\\r\\n}\\r\\n.flex-wrapper {\\r\\n  display: -webkit-box;\\r\\n  display: flex;\\r\\n  min-height: 100vh;\\r\\n  -webkit-box-orient: vertical;\\r\\n  -webkit-box-direction: normal;\\r\\n          flex-direction: column;\\r\\n  -webkit-box-pack: justify;\\r\\n          justify-content: space-between\\r\\n}\"","module.exports = \"  <app-nav-menu></app-nav-menu>\\r\\n  <main class=\\\"flex-shrink-0 flex-wrapper\\\">\\r\\n    <div class=\\\"container\\\">\\r\\n      <router-outlet></router-outlet>\\r\\n    </div>\\r\\n    <app-footer></app-footer>\\r\\n  </main>\"","import { Component, ElementRef } from '@angular/core';\r\nimport { AppSettings } from './shared/models/appsettings.model.';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule, APP_INITIALIZER  } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { RouterModule } from '@angular/router';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgxPaginationModule } from 'ngx-pagination';\r\nimport { AutocompleteLibModule } from 'angular-ng-autocomplete';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { interceptorProviders } from './interceptors';\r\nimport { NavMenuComponent } from './nav-menu/nav-menu.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { PaginationComponent } from './shared/pagination/pagination.component';\r\nimport { ServiceListComponent } from './service-list/service-list.component';\r\nimport { XrServicesComponent } from './xr-services/xr-services.component';\r\nimport { SpvWalletsComponent } from './spv-wallets/spv-wallets.component';\r\nimport { XrouterApiService } from './shared/services/xrouter.service';\r\nimport { ViewXrServiceComponent } from './view-xr-service/view-xr-service.component';\r\nimport { ViewSnodeComponent } from './view-snode/view-snode.component';\r\nimport { PageNotFoundComponent } from './page-not-found/page-not-found.component';\r\nimport { HttpErrorInterceptor } from './shared/error-handling/http-error.interceptor';\r\nimport { ViewSpvWalletComponent } from './view-spv-wallet/view-spv-wallet.component';\r\nimport { ServiceNodeListComponent } from './service-node-list/service-node-list.component';\r\nimport { SearchFormComponent } from './search-form/search-form.component';\r\nimport { NavigatorService } from './shared/services/navigator.service.';\r\nimport { ErrorComponent } from './error/error.component';\r\nimport { RpcConsoleComponent } from './rpc-console/rpc-console.component';\r\nimport { ResponseTimeService } from './shared/services/responsetime.service';\r\nimport { SearchService } from './shared/services/search.service';\r\nimport { ConfigurationService } from './shared/services/configuration.service';\r\nimport { FooterComponent } from './footer/footer.component';\r\nimport { SignInComponent } from './sign-in/sign-in.component';\r\nimport { AccountService } from './shared/services/account.service';\r\nimport { checkIfUserIsAuthenticated } from './check-login-intializer';\r\n\r\n\r\nconst appInitializerFn = (appConfig: ConfigurationService) => {\r\n  return () => {\r\n    return appConfig.loadConfig();\r\n  };\r\n}\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    NavMenuComponent,\r\n    HomeComponent,\r\n    FooterComponent,\r\n    PaginationComponent,\r\n    ServiceNodeListComponent,\r\n    ServiceListComponent,\r\n    XrServicesComponent,\r\n    SpvWalletsComponent,\r\n    ViewXrServiceComponent,\r\n    ViewSpvWalletComponent,\r\n    ViewSnodeComponent,\r\n    SearchFormComponent,  \r\n    SignInComponent,  \r\n    RpcConsoleComponent,\r\n    ErrorComponent,\r\n    PageNotFoundComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule.withServerTransition({ appId: 'ng-cli-universal' }),\r\n    HttpClientModule,\r\n    FormsModule,\r\n    BrowserAnimationsModule,\r\n    ReactiveFormsModule,\r\n    NgbModule,\r\n    NgxPaginationModule,\r\n    AutocompleteLibModule,\r\n    RouterModule.forRoot([\r\n      { path: '', component: HomeComponent, pathMatch: 'full' },\r\n      { path: 'xrouter-snodes', component: ServiceNodeListComponent },\r\n      { path: 'spv-wallets', component: SpvWalletsComponent },\r\n      { path: 'spv-wallets/:name', component: ViewSpvWalletComponent, runGuardsAndResolvers: 'always' },\r\n      { path: 'spv-wallets/:name/:nodePubKey', component: ViewSpvWalletComponent, runGuardsAndResolvers: 'always' },\r\n      { path: 'xcloud-services', component: XrServicesComponent },\r\n      { path: 'xcloud-services/:name', component: ViewXrServiceComponent, runGuardsAndResolvers: 'always' },\r\n      { path: 'xcloud-services/:name/:NodePubKey', component: ViewXrServiceComponent, runGuardsAndResolvers: 'always' },\r\n      { path: 'xrouter-snodes/:nodePubKey', component: ViewSnodeComponent},\r\n      { path: 'xrouter-snodes/:nodePubKey/:service', component: ViewSnodeComponent},\r\n      { path: 'rpc-console', component: RpcConsoleComponent},\r\n      { path: 'error', component: ErrorComponent},\r\n      { path: '**', component: PageNotFoundComponent }\r\n      \r\n    ], { \r\n      useHash: true,\r\n      onSameUrlNavigation: 'reload'\r\n    })\r\n  ],\r\n  providers: [\r\n    XrouterApiService, \r\n    SearchService,\r\n    AccountService,\r\n    NavigatorService,\r\n    ResponseTimeService,\r\n    // {\r\n    //   provide: HTTP_INTERCEPTORS,\r\n    //   useClass: HttpErrorInterceptor,\r\n    //   multi: true\r\n    // },\r\n    ConfigurationService, \r\n    {\r\n      provide: APP_INITIALIZER,\r\n      useFactory: checkIfUserIsAuthenticated,\r\n      multi: true,\r\n      deps: [AccountService]\r\n    },\r\n    interceptorProviders\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {}\r\n","import { of } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { AccountService } from './shared/services/account.service';\r\n\r\n\r\n\r\nexport function checkIfUserIsAuthenticated(accountService: AccountService) {\r\n    return () => {\r\n        return accountService.updateUserAuthenticationStatus().pipe(catchError(_ => {\r\n            console.error('Error trying to validate if the user is authenticated. The most probable cause is that the ASP.NET Core project isn\\'t running');\r\n            return of(null);\r\n        })).toPromise();                    \r\n    };\r\n}","module.exports = \"\"","module.exports = \"<h1>Something went wrong</h1>\\r\\n<!-- <p>Servicenode is probably not properly configured. Servicenode info cannot be retrieved.</p> -->\\r\\n\\r\\n<h3>Error: {{error.error}}</h3>\\r\\n\"","\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router, ActivatedRouteSnapshot } from '@angular/router';\nimport { isNullOrUndefined } from 'util';\n\n@Component({\n  selector: 'error',\n  templateUrl: './error.component.html',\n  styleUrls: ['./error.component.css']\n})\nexport class ErrorComponent implements OnInit {\n  error:any;\n\n  constructor(    \n    private router:Router, \n    private route: ActivatedRoute) {\n      \n    this.route.queryParams.subscribe(e => this.error = e);\n  }\n\n  ngOnInit() {}\n\n}\n","module.exports = \".footer{\\r\\n  background-color: #f5f5f5;\\r\\n  /* background-image: url(../../assets/pattern.png);\\r\\n  background-repeat: no-repeat;\\r\\n  background-size: contain; */\\r\\n}\\r\\nbody {\\r\\n  padding-bottom: 70px;\\r\\n}\"","module.exports = \"<!-- <footer class=\\\"footer mt-auto py-3\\\">\\r\\n  \\r\\n    <div class=\\\"container\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md\\\">\\r\\n          Powered by:  \\r\\n          <a href=\\\"https://blocknet.co/\\\"> \\r\\n            <img src=\\\"../../assets/blocknet-icon.png\\\" width=\\\"15\\\" height=\\\"15\\\" alt=\\\"\\\">\\r\\n            The Blocknet\\r\\n          </a>\\r\\n        </div>\\r\\n        <div class=\\\"col-md\\\">\\r\\n          Community website made by: \\r\\n          <a href=\\\"https://github.com/luusluus\\\">\\r\\n            Lucien\\r\\n          </a>\\r\\n        </div>\\r\\n      </div>\\r\\n      \\r\\n    </div>\\r\\n  \\r\\n </footer> -->\\r\\n\\r\\n \\r\\n<footer class=\\\"footer font-small blue pt-4\\\">\\r\\n  <div class=\\\"container text-center text-md-left\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-6 mt-md-0 mt-3\\\">\\r\\n        <div class=\\\"d-flex align-items-center mb-4\\\">\\r\\n          <img src=\\\"../../assets/blocknet-icon.png\\\" width=\\\"30\\\" alt=\\\"\\\">\\r\\n          <span class=\\\"h4 mb-0 ml-3\\\">Powered by The Blocknet</span>\\r\\n        </div>\\r\\n        <p>\\r\\n          XRouter Service Explorer is a look-up directory platform for SPV Wallets and XCloud services provided by Blocknet's Service Nodes.\\r\\n        </p>\\r\\n\\r\\n      </div>\\r\\n    \\r\\n      <div class=\\\"col-md-3 mb-md-0 mb-3\\\">\\r\\n\\r\\n        \\r\\n        <h5>Protocol</h5>\\r\\n        <hr>\\r\\n\\r\\n        <ul class=\\\"list-unstyled\\\">\\r\\n          <li>\\r\\n            <a href=\\\"https://blocknet.co\\\">The Blocknet</a>\\r\\n          </li>\\r\\n          <li>\\r\\n            <a href=\\\"https://api.blocknet.co/\\\">Developer APIs</a>\\r\\n          </li>\\r\\n          <li>\\r\\n            <a href=\\\"https://docs.blocknet.co\\\">Knowledge Base</a>\\r\\n          </li>\\r\\n        </ul>\\r\\n\\r\\n      </div>\\r\\n\\r\\n\\r\\n\\r\\n      <div class=\\\"col-md-3 mb-md-0 mb-3\\\">\\r\\n        <h5>Community</h5>\\r\\n        <hr>\\r\\n\\r\\n        <ul class=\\\"list-unstyled\\\">\\r\\n          <li>\\r\\n            <a href=\\\"https://blockdx.co\\\">Blockdx.co</a>\\r\\n          </li>\\r\\n          <li>\\r\\n            <a href=\\\"https://block-node.info/index.php\\\">Block-node.info</a>\\r\\n          </li>\\r\\n        </ul>\\r\\n\\r\\n      </div>\\r\\n\\r\\n\\r\\n    </div>\\r\\n\\r\\n    <hr>\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-4 mt-md-0 mt-3\\\">\\r\\n        <div class=\\\"py-3\\\">\\r\\n          Made by Community member \\r\\n          <a href=\\\"https://github.com/luusluus\\\">Lucien</a>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-4 mt-md-0 mt-3\\\">\\r\\n        <div class=\\\"text-center py-3\\\">\\r\\n          Hosted by  \\r\\n          <img src=\\\"../../assets/cclogo.png\\\" width=\\\"25\\\" alt=\\\"\\\">\\r\\n          <span class=\\\"mb-0 ml-1\\\">\\r\\n            <a href=\\\"https://cloudchainsinc.com/\\\">CloudChains, inc.</a>\\r\\n            \\r\\n          </span>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-4 mt-md-0 mt-3\\\">\\r\\n        <div class=\\\"text-right py-3\\\">\\r\\n          Donations BLOCK: BWt8duaxZLohTEQTWQYULW5Dt2kPbRxuP5\\r\\n        </div>\\r\\n      </div>\\r\\n      \\r\\n    </div>\\r\\n    \\r\\n\\r\\n  </div>\\r\\n\\r\\n  \\r\\n\\r\\n</footer>\\r\\n\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-footer',\r\n  templateUrl: './footer.component.html',\r\n  styleUrls: ['./footer.component.css']\r\n})\r\nexport class FooterComponent {\r\n  \r\n}\r\n","module.exports = \"<h1>XRouter Service Explorer</h1>\\r\\n<div class=\\\"container\\\">\\r\\n  <div class=\\\"card-deck mb-3 text-center\\\">\\r\\n      <div class=\\\"card mb-4 shadow-sm\\\">\\r\\n        <div class=\\\"card-header\\\">\\r\\n          <h4 class=\\\"my-0 font-weight-normal\\\">Service Nodes</h4>\\r\\n        </div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n          {{ networkServiceCount }}\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"card mb-4 shadow-sm\\\">\\r\\n        <div class=\\\"card-header\\\">\\r\\n          <h4 class=\\\"my-0 font-weight-normal\\\">XCloud Services</h4>\\r\\n        </div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n            {{ xCloudServices?.totalItems }}\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"card mb-4 shadow-sm\\\">\\r\\n        <div class=\\\"card-header\\\">\\r\\n          <h4 class=\\\"my-0 font-weight-normal\\\">SPV Wallets</h4>\\r\\n        </div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n          {{ spvWallets?.totalItems }}\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { XrouterApiService } from '../shared/services/xrouter.service';\r\nimport { forkJoin } from 'rxjs';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n})\r\nexport class HomeComponent implements OnInit{\r\n  constructor(private router: Router,private xrouterService: XrouterApiService){}\r\n  networkServiceCount:any;\r\n  xCloudServices:any;\r\n  spvWallets:any;\r\n  ngOnInit(): void {\r\n   var sources = [\r\n     this.xrouterService.GetServiceNodeCount(),\r\n     this.xrouterService.GetNetworkServices(),\r\n     this.xrouterService.GetNetworkSpvWallets()\r\n   ];\r\n\r\n   forkJoin(sources).subscribe(data =>{\r\n     this.networkServiceCount = data[0];\r\n     this.xCloudServices = data[1];\r\n     this.spvWallets = data[2];\r\n  }, err => {\r\n    if(err.status == 404)\r\n      this.router.navigate(['']);\r\n  });\r\n  }\r\n}\r\n","import {HTTP_INTERCEPTORS} from '@angular/common/http';\r\nimport {HttpErrorInterceptor} from './shared/error-handling/http-error.interceptor';\r\nimport { HttpRequestTimeInterceptor } from './shared/http-responsetime-logging/http-responsetime-logging.interceptor';\r\n\r\nexport const interceptorProviders = \r\n   [\r\n    { provide: HTTP_INTERCEPTORS, useClass: HttpRequestTimeInterceptor, multi: true },\r\n    { provide: HTTP_INTERCEPTORS, useClass: HttpErrorInterceptor, multi: true },\r\n];","module.exports = \"a.navbar-brand {\\r\\n    white-space: normal;\\r\\n    text-align: center;\\r\\n    word-break: break-all;\\r\\n  }\\r\\n  \\r\\n  html {\\r\\n    font-size: 14px;\\r\\n  }\\r\\n  \\r\\n  @media (min-width: 768px) {\\r\\n    html {\\r\\n      font-size: 16px;\\r\\n    }\\r\\n  }\\r\\n  \\r\\n  .box-shadow {\\r\\n    box-shadow: 0 .25rem .75rem rgba(0, 0, 0, .05);\\r\\n  }\\r\\n  \\r\\n  .ng-autocomplete {\\r\\n    width: 400px;\\r\\n}\"","module.exports = \"<header>\\r\\n        <nav\\r\\n          class=\\\"navbar navbar-expand-sm navbar-toggleable-sm navbar-light bg-white border-bottom box-shadow mb-3\\\"\\r\\n        >\\r\\n          <div class=\\\"container\\\">\\r\\n            <a class=\\\"navbar-brand\\\" [routerLink]=\\\"['/']\\\">\\r\\n              <img src=\\\"../../assets/xrouter.png\\\" width=\\\"135\\\" height=\\\"30\\\" alt=\\\"\\\">\\r\\n            </a>\\r\\n            <button\\r\\n              class=\\\"navbar-toggler\\\"\\r\\n              type=\\\"button\\\"\\r\\n              data-toggle=\\\"collapse\\\"\\r\\n              data-target=\\\".navbar-collapse\\\"\\r\\n              aria-label=\\\"Toggle navigation\\\"\\r\\n              [attr.aria-expanded]=\\\"isExpanded\\\"\\r\\n              (click)=\\\"toggle()\\\"\\r\\n            >\\r\\n              <span class=\\\"navbar-toggler-icon\\\"></span>\\r\\n            </button>\\r\\n            <div\\r\\n              class=\\\"navbar-collapse collapse d-sm-inline-flex\\\"\\r\\n              [ngClass]=\\\"{ show: isExpanded }\\\"\\r\\n            >\\r\\n              <ul class=\\\"navbar-nav flex-grow mr-auto\\\">\\r\\n                <li\\r\\n                  class=\\\"nav-item\\\"\\r\\n                  [routerLinkActive]=\\\"['link-active']\\\"\\r\\n                  [routerLinkActiveOptions]=\\\"{ exact: true }\\\"\\r\\n                >\\r\\n                <a class=\\\"nav-link text-dark\\\" [routerLink]=\\\"['/xrouter-snodes']\\\"\\r\\n                >Nodes</a\\r\\n            >\\r\\n                </li>\\r\\n                <li class=\\\"nav-item\\\" [routerLinkActive]=\\\"['link-active']\\\">\\r\\n                  <a class=\\\"nav-link text-dark\\\" [routerLink]=\\\"['/spv-wallets']\\\"\\r\\n                    >SPV</a\\r\\n                  >\\r\\n                </li>\\r\\n                <li class=\\\"nav-item\\\" [routerLinkActive]=\\\"['link-active']\\\">\\r\\n                  <a class=\\\"nav-link text-dark\\\" [routerLink]=\\\"['/xcloud-services']\\\"\\r\\n                    >Services</a\\r\\n                  >\\r\\n                </li>\\r\\n                <li class=\\\"nav-item dropdown\\\">\\r\\n                  <a class=\\\"nav-link dropdown-toggle\\\" href=\\\"#\\\" id=\\\"navbarDropdown\\\" role=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\r\\n                    Dropdown\\r\\n                  </a>\\r\\n                  <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"navbarDropdown\\\">\\r\\n                    <a class=\\\"dropdown-item\\\" href=\\\"#\\\">Action</a>\\r\\n                    <a class=\\\"dropdown-item\\\" href=\\\"#\\\">Another action</a>\\r\\n                    <div class=\\\"dropdown-divider\\\"></div>\\r\\n                    <a class=\\\"dropdown-item\\\" href=\\\"#\\\">Something else here</a>\\r\\n                  </div>\\r\\n                </li>\\r\\n              </ul>\\r\\n              <ul class=\\\"navbar-nav ml-auto nav-flex-icons\\\">\\r\\n                <li class=\\\"nav-item\\\">\\r\\n                  <div class=\\\"ng-autocomplete\\\">\\r\\n                    <search-form></search-form>\\r\\n                  </div>\\r\\n                </li>\\r\\n                <div *ngIf=\\\"!isUserAuthenticated; else loggedIn\\\">\\r\\n                  <li class=\\\"nav-item\\\">\\r\\n                      <a class=\\\"btn ml-4\\\" style=\\\"background-color: #7289DA; color:white;\\\" href=\\\"#\\\" (click)=\\\"login()\\\">\\r\\n                        <img src=\\\"../../assets/discord-logo-white.png\\\" width=\\\"30\\\" alt=\\\"\\\">\\r\\n                        <span class=\\\"mb-0 ml-1\\\">Log in with Discord</span>\\r\\n                      </a>\\r\\n                  </li>\\r\\n                </div> \\r\\n                <ng-template #loggedIn>\\r\\n                  <!-- <li>\\r\\n                    <a class=\\\"btn ml-4\\\" style=\\\"background-color: #7289DA; color:white;\\\" href=\\\"#\\\" (click)=\\\"logout()\\\">\\r\\n                    <img src=\\\"../../assets/discord-logo-white.png\\\" width=\\\"30\\\" alt=\\\"\\\">\\r\\n                    <span class=\\\"mb-0 ml-1\\\">Logout</span>\\r\\n                  </a>\\r\\n                </li> -->\\r\\n                \\r\\n                </ng-template>\\r\\n              </ul>\\r\\n             \\r\\n                \\r\\n            </div>\\r\\n          </div>\\r\\n        </nav>\\r\\n      </header>\\r\\n      \"","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { AccountService } from '../shared/services/account.service';\r\nimport { Router } from '@angular/router';\r\nimport { finalize } from 'rxjs/operators';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Component({\r\n  selector: 'app-nav-menu',\r\n  templateUrl: './nav-menu.component.html',\r\n  styleUrls: ['./nav-menu.component.css']\r\n})\r\nexport class NavMenuComponent implements OnInit,OnDestroy{\r\n  isExpanded = false;\r\n  isUserAuthenticated = false;\r\n  subscription: Subscription;\r\n  userName: string;\r\n\r\n  constructor(private httpClient: HttpClient, private accountService: AccountService) { }\r\n\r\n  collapse() {\r\n    this.isExpanded = false;\r\n  }\r\n\r\n  toggle() {\r\n    this.isExpanded = !this.isExpanded;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.subscription = this.accountService.isUserAuthenticated.subscribe(isAuthenticated => {\r\n      console.log(isAuthenticated);\r\n      this.isUserAuthenticated = isAuthenticated;\r\n      if (this.isUserAuthenticated) {\r\n      this.httpClient.get(`/api/account/name`, { responseType: 'text', withCredentials: true }).subscribe(theName => {\r\n          this.userName = theName;\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.subscription.unsubscribe();\r\n  }\r\n\r\n  logout() {\r\n    this.accountService.logout();\r\n  }\r\n\r\n  // simulateFailedCall() {\r\n  //   this.httpClient.get(`${environment.apiUrl}/home/fail`).subscribe();\r\n  // }\r\n\r\n  login() {\r\n    this.accountService.login();\r\n  }\r\n}\r\n","module.exports = \"\"","module.exports = \"<p>\\n  page-not-found works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-page-not-found',\n  templateUrl: './page-not-found.component.html',\n  styleUrls: ['./page-not-found.component.css']\n})\nexport class PageNotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"#sandbox,\\r\\n#sandbox .output,\\r\\n#sandbox .output span,\\r\\n#sandbox textarea,\\r\\n#sandbox textarea:focus {\\r\\n\\tfont-size:14px;\\r\\n\\tline-height:1.3;\\r\\n\\tfont-weight: normal;\\r\\n\\tfont-family:\\\"Consolas\\\", \\\"Andale Mono\\\", \\\"Courier New\\\", \\\"Courier\\\", monospace;\\r\\n\\tborder:0 none;\\r\\n\\toutline:0 none;\\r\\n\\tbox-shadow:none;\\r\\n}\\r\\n#sandbox {\\r\\n\\tbackground:#333;\\r\\n\\tcolor: #ccc;\\r\\n\\tpadding:20px 20px 15px;\\r\\n\\tborder-radius: 10px;\\r\\n\\tmargin:30px auto;\\r\\n}\\r\\n#sandbox .output {\\r\\n\\tdisplay:block;\\r\\n\\twhite-space:pre;\\r\\n\\twidth:100%;\\r\\n\\theight:650px;\\r\\n\\toverflow-y:auto;\\r\\n\\tposition:relative;\\r\\n\\tpadding:0;\\r\\n\\tmargin:0 0 10px;\\r\\n\\tborder:0 none;\\r\\n}\\r\\n#sandbox .output span           { color:#f7f7f7; }\\r\\n#sandbox .output span.command   { color:#ccc; }\\r\\n#sandbox .output span.fix    { color:#777; }\\r\\n#sandbox .output span.undefined { color:#777; }\\r\\n#sandbox .output span.string    { color:#99f; }\\r\\n#sandbox .output span.number    { color:#7f7; }\\r\\n#sandbox .output span.error     { color:#f77; }\\r\\n#sandbox .input {\\r\\n\\tpadding:0 0 0 15px;\\r\\n\\tposition:relative;\\r\\n}\\r\\n#sandbox .input:before {\\r\\n\\tcontent:\\\">\\\";\\r\\n\\tposition:absolute;\\r\\n\\ttop: 1px;\\r\\n\\tleft: 0;\\r\\n\\tcolor:#ddd\\r\\n}\\r\\n#sandbox textarea {\\r\\n\\tcolor:#f7f7f7;\\r\\n\\tbackground:#333;\\r\\n\\tborder:0 none;\\r\\n\\toutline:0 none;\\r\\n\\tpadding:0;\\r\\n\\tmargin:0;\\r\\n\\tresize: none;\\r\\n\\twidth:100%;\\r\\n\\toverflow:hidden;\\r\\n}\\r\\n#sandbox textarea:focus {\\r\\n\\toutline:0 none;\\r\\n}\\r\\n#sandbox .output::-webkit-scrollbar,\\r\\n#sandbox .output::-webkit-scrollbar-button,\\r\\n#sandbox .output::-webkit-scrollbar-track,\\r\\n#sandbox .output::-webkit-scrollbar-track-piece,\\r\\n#sandbox .output::-webkit-scrollbar-thumb,\\r\\n#sandbox .output::-webkit-scrollbar-corner,\\r\\n#sandbox .output::-webkit-resizer {\\r\\n\\tbackground: transparent;\\r\\n}\\r\\n#sandbox .output::-webkit-scrollbar {\\r\\n\\twidth:  7px;\\r\\n\\theight: 7px;\\r\\n\\tborder-radius: 4px;\\r\\n}\\r\\n#sandbox .output::-webkit-scrollbar-track-piece {\\r\\n\\tborder-radius: 5px;\\r\\n}\\r\\n#sandbox .output::-webkit-scrollbar-thumb {\\r\\n\\tbackground: #4f4f4f;\\r\\n\\t        border-radius: 5px;\\r\\n}\\r\\n#sandbox .output::-webkit-scrollbar-button {\\r\\n\\twidth:0;\\r\\n\\theight:0;\\r\\n}\"","module.exports = \"<h1>Rpc Console</h1>\\n<div id=\\\"sandbox\\\">\\n  <div class=\\\"output\\\">\\n\\n  </div>\\n  <div class=\\\"input\\\">\\n      <textarea rows=\\\"1\\\" placeholder=\\\"Enter rpc command\\\"></textarea>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-rpc-console',\n  templateUrl: './rpc-console.component.html',\n  styleUrls: ['./rpc-console.component.css']\n})\nexport class RpcConsoleComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".ng-autocomplete {\\r\\n    width: 100%;\\r\\n}\"","module.exports = \"    <ng-autocomplete\\n      [data]=\\\"services?.items\\\"\\n      [searchKeyword]=\\\"keyword\\\"\\n      debounceTime = \\\"400\\\"\\n      placeHolder=\\\"Search services and SPV wallets...\\\"\\n      (selected)='selectEvent($event)'\\n      (inputChanged)='onChangeSearch($event)'\\n      (inputFocused)='onFocused($event)'\\n      historyIdentifier=\\\"services?.items\\\"\\n      [itemTemplate]=\\\"itemTemplate\\\"\\n      [notFoundTemplate]=\\\"notFoundTemplate\\\">\\n    </ng-autocomplete>\\n  \\n    <ng-template #itemTemplate let-item>\\n      <a [innerHTML]=\\\"item.name\\\"></a>\\n    </ng-template>\\n  \\n    <ng-template #notFoundTemplate let-notFound>\\n      <div [innerHTML]=\\\"notFound\\\"></div>\\n    </ng-template>\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatAutocompleteModule, MatAutocompleteSelectedEvent } from '@angular/material/autocomplete';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { NavigatorService } from '../shared/services/navigator.service.';\nimport { XrouterApiService } from '../shared/services/xrouter.service';\n\nimport { debounceTime, tap, switchMap, finalize } from 'rxjs/operators';\nimport { HttpClient } from '@angular/common/http';\nimport { BaseService } from '../shared/services/base.service';\n\n// const NODEPUBKEY_REGEX = '^[0][a-zA-Z0-9]{65}$'; \n// const ADDRESS_REGEX = '^[B][a-zA-Z0-9]{33}$';\n// const TXHASH_REGEX = '[a-zA-Z0-9]{64}$';\n\n@Component({\n  selector: 'search-form',\n  templateUrl: './search-form.component.html',\n  styleUrls: ['./search-form.component.css']\n})\nexport class SearchFormComponent extends BaseService implements OnInit {\n  private readonly apiEndpoint = 'blocknet/xrouter';\n  private baseEndpoint = 'api/'; // http://localhost\n\n  constructor(\n    private http: HttpClient,\n    private xrouterService: XrouterApiService,\n    private navigatorService: NavigatorService,\n  ) {\n    super();\n  }\n\n  keyword = 'name';\n  services:any;\n \n  ngOnInit(){\n    this.xrouterService.GetNetworkServices().subscribe(\n      res => {\n        this.services = res;\n      }\n    )\n  }\n  selectEvent(item) {\n    let service = item.name as string;\n    if(service.includes(\"xrs::\")){\n      this.navigatorService.xCloudServiceDetails(service);\n    } else{\n      this.navigatorService.spvWalletDetails(service);\n    }\n    // do something with selected item\n  }\n \n  onChangeSearch(val: string) {\n    this.http.get(this.baseEndpoint + this.apiEndpoint + \"/?searchString=\" + val).subscribe(\n      data => {\n        this.services = data;\n      }\n    );\n    // fetch remote data from here\n    // And reassign the 'data' which is binded to 'data' property.\n  }\n  \n  onFocused(e){\n    // do something when input is focused\n  }\n}\n\n\n","import { Component, OnInit, EventEmitter, Output, Input } from '@angular/core';\n\n@Component({\n  selector: 'service-list',\n  template: `\n        <table class=\"table table-striped\">\n            <thead>\n              <tr>\n                <th *ngFor=\"let c of columns\">\n                    <div *ngIf=\"c.isSortable\" (click)=\"sortBy(c.key)\">\n                        {{ c.title }}\n                        <i *ngIf=\"query.sortBy === c.key\" \n                          class=\"fa\"\n                          [class.fa-sort-asc]=\"query.isSortAscending\"\n                          [class.fa-sort-desc]=\"!query.isSortAscending\"\n                        ></i>\n                      </div>\n                      <div *ngIf=\"!c.isSortable\">\n                        {{ c.title }}\n                      </div>\n                </th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr *ngFor=\"let c of services.items\">\n                <td><a [routerLink]=\"[c.name]\">{{c.name}}</a></td>\n                <td>{{c.nodeCount}}</td>\n              </tr>\n            </tbody>\n          </table>\n  `\n})\nexport class ServiceListComponent implements OnInit {\n\n  private readonly PAGE_SIZE = 3; \n\n  @Input('services') services:any = {};\n\n  @Input('query-init') queryInit = {\n  };\n\n  @Output('query-changed') queryChanged = new EventEmitter();\n\n  query: any = {\n    pageSize: this.PAGE_SIZE\n  };\n  \n  columns:any=[\n    {title: 'Name', key: 'name'},\n    {title: 'Node Count', key: 'nodeCount', isSortable: true},\n    {}\n  ];\n  \n  constructor() { }\n\n  ngOnInit() {\n    this.initializeQuery();\n  }\n\n  ngOnChanges(){\n    this.initializeQuery();\n\t}\n\n  onFilterChange() {\n    this.query.page = 1; \n    this.queryChanged.emit(this.query);\n  }\n\n  private initializeQuery(){\n  }\n\n  resetFilter() {\n    this.query = {\n      page: 1,\n      pageSize: this.PAGE_SIZE,\n    };\n    this.queryChanged.emit(this.query);\n  }\n\n  sortBy(columnName) {\n    if (this.query.sortBy === columnName) {\n      this.query.isSortAscending = !this.query.isSortAscending; \n    } else {\n      this.query.sortBy = columnName;\n      this.query.isSortAscending = true;\n    }\n\n    this.queryChanged.emit(this.query);\n  }\n\n  onPageChange(page) {\n    this.query.page = page;\n    this.queryChanged.emit(this.query);\n  }\n\n}\n","module.exports = \"td{\\r\\n    max-width: 0;\\r\\n    overflow: hidden;\\r\\n    text-overflow: ellipsis;\\r\\n    white-space: nowrap;\\r\\n}\"","module.exports = \"<div *ngIf=\\\"loading else loaded\\\">\\n        Fetching data...\\n</div>\\n            \\n<ng-template #loaded>\\n        <h2>Service Node List</h2>\\n                        <div class=\\\"well\\\">\\n                        <div class=\\\"form-group\\\">\\n                        <h3>Filter</h3>\\n                        <label for=\\\"spvWallet\\\">Spv Wallet</label>\\n                        <select id=\\\"spvWallet\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"query.spvWallet\\\" (change)=\\\"onFilterChange()\\\">\\n                                <option value=\\\"\\\"></option>\\n                                <option *ngFor=\\\"let w of spvWallets?.items\\\" value=\\\"{{ w.name }}\\\">{{ w.name }}</option>\\n                        </select>  \\n                        <label for=\\\"xCloudService\\\">XCloud Service</label>\\n                        <select id=\\\"xCloudService\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"query.xCloudService\\\" (change)=\\\"onFilterChange()\\\">\\n                                <option value=\\\"\\\"></option>\\n                                <option *ngFor=\\\"let xc of xCloudServices?.items\\\" value=\\\"{{ xc.name }}\\\">{{ xc.name }}</option>\\n                        </select>  \\n                        </div>\\n                        <br>\\n                        <button class=\\\"btn btn-outline-primary\\\" (click)=\\\"resetFilter()\\\">Reset</button>\\n                </div>\\n        Count: {{ serviceNodes?.totalItems}}\\n        <ngb-pagination [collectionSize]=\\\"serviceNodes?.totalItems\\\" [pageSize]=\\\"query.pageSize\\\" [(page)]=\\\"query.page\\\" (pageChange)=\\\"onPageChange($event)\\\"></ngb-pagination>\\n        <div class=\\\"table-responsive\\\">\\n                <table class=\\\"table\\\">\\n                        <thead>\\n                                <tr>\\n                                <th *ngFor=\\\"let c of columns\\\"> {{ c.title }} </th>\\n                                </tr> \\n                        </thead>\\n                        <tbody>\\n                                <tr *ngFor=\\\"let sn of serviceNodes?.items; let i = index\\\">\\n                                        <td>{{sn.rank}}</td>\\n                                        <td><a [routerLink]=\\\"[sn.nodePubKey, sn.spvWallets[0]]\\\">{{sn.nodePubKey}}</a></td>\\n                                        <td>\\n                                                <div *ngIf=\\\"sn.spvWallets?.length > 0\\\">\\n                                                        <div class=\\\"form-group\\\">\\n                                                                <label for=\\\"spvWallets\\\"></label>\\n                                                                <select id=\\\"spvWallets\\\" class=\\\"form-control\\\">\\n                                                                        <option *ngFor=\\\"let w of sn.spvWallets\\\" [value]=\\\"w\\\">{{ w }} </option>\\n                                                                </select>   \\n                                                        </div> \\n                                                </div>\\n                                                \\n                                        </td>\\n                                        <td>\\n                                                <div *ngIf = \\\"sn.xCloudServices.length > 0\\\">\\n                                                        <div class=\\\"form-group\\\">\\n                                                                <label for=\\\"xcloudServices\\\"></label>\\n                                                                <select id=\\\"xcloudServices\\\" class=\\\"form-control\\\">\\n                                                                        <option *ngFor=\\\"let s of sn.xCloudServices\\\" [value]=\\\"s\\\">{{ s }} </option>\\n                                                                </select>   \\n                                                        </div> \\n                                                </div>\\n                                                \\n                                        </td>\\n                                </tr>\\n                        </tbody>\\n                </table>\\n        </div>\\n        \\n</ng-template>\\n\"","import { Component, OnInit, EventEmitter, Output } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { XrouterApiService } from '../shared/services/xrouter.service';\nimport { forkJoin } from 'rxjs';\n\n@Component({\n  selector: 'app-service-node-list',\n  templateUrl: './service-node-list.component.html',\n  styleUrls: ['./service-node-list.component.css']\n})\nexport class ServiceNodeListComponent implements OnInit {\n  private readonly PAGE_SIZE = 6; \n\n  @Output('query-changed') queryChanged = new EventEmitter();\n  \n  serviceNodes:any;\n  spvWallets:any;\n  xCloudServices:any;\n\n  query:any = {\n    page: 1,\n    pageSize: this.PAGE_SIZE,\n    onlyXWallets: true\n  };\n\n  columns:any=[\n    {title: 'Rank', key: 'rank'},\n    {title: 'Node Public Key', key: 'nodePubKey'},\n    {title: 'Spv Wallets', key: 'spvWallets'},\n    {title: 'XCloud Services', key: 'xCloudServices'},\n  ];\n\n  loading:boolean;\n\n  constructor(private router: Router, private xrouterService: XrouterApiService) { }\n\n  ngOnInit() {\n    var sources = [\n      this.xrouterService.GetNetworkServices(),\n      this.xrouterService.GetNetworkSpvWallets(),\n    ];\n  \n    forkJoin(sources).subscribe(data =>{\n      this.xCloudServices = data[0];\n      this.spvWallets = data[1];\n    }, err => {\n      if(err.status == 404)\n        this.router.navigate(['']);\n    });\n    this.populateServiceNodes();\n  }\n\n  private populateServiceNodes(){\n    this.xrouterService.GetServiceNodeList(this.query)\n      .subscribe(result => {        \n        this.serviceNodes = result;\n        this.loading = false;\n      });\n  }\n\n  ngOnChanges(){\n    this.initializeQuery();\n\t}\n\n  onFilterChange() {\n    this.query.page = 1; \n    this.populateServiceNodes();\n  }\n\n  private initializeQuery(){}\n\n  resetFilter() {\n    this.query = {\n      page: 1,\n      pageSize: this.PAGE_SIZE,\n    };\n    this.populateServiceNodes();\n  }\n\n  onPageChange(page) {\n    this.query.page = page;\n    this.populateServiceNodes();\n  }\n}\n","import {\r\n    HttpEvent,\r\n    HttpInterceptor,\r\n    HttpHandler,\r\n    HttpRequest,\r\n    HttpResponse,\r\n    HttpErrorResponse\r\n   } from '@angular/common/http';\r\n   import { Observable, throwError } from 'rxjs';\r\n   import { retry, catchError } from 'rxjs/operators';\r\n   import { Router } from '@angular/router';\r\n   \r\n   export class HttpErrorInterceptor implements HttpInterceptor {\r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n      return next.handle(request)\r\n        .pipe(\r\n          catchError((error: HttpErrorResponse) => {\r\n            let errorMessage = '';\r\n            console.log(error);\r\n            if (error.error instanceof ErrorEvent) {\r\n              // client-side error\r\n              errorMessage = `Error: ${error.error.message}`;\r\n            } else {\r\n              // server-side error\r\n              errorMessage = error.error;\r\n            }\r\n            return throwError(errorMessage);\r\n          })\r\n        )\r\n    }\r\n   }","import {\r\n    HttpEvent,\r\n    HttpInterceptor,\r\n    HttpHandler,\r\n    HttpRequest,\r\n    HttpResponse,\r\n    HttpErrorResponse\r\n   } from '@angular/common/http';\r\n   import { Observable, throwError, ReplaySubject } from 'rxjs';\r\n   import { retry, catchError, map, tap } from 'rxjs/operators';\r\n   import { Router } from '@angular/router';\r\n   import { Injectable } from '@angular/core';\r\n   import { ResponseTimeService } from '../services/responsetime.service';\r\n   \r\n   @Injectable({\r\n    providedIn: 'root'\r\n  })\r\n   export class HttpRequestTimeInterceptor implements HttpInterceptor {\r\n    constructor(private responseTimeService: ResponseTimeService){}\r\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n\r\n      var startTime = (new Date()).getTime();\r\n      return next.handle(req).pipe(\r\n        map(\r\n          (event) => {\r\n            if (event instanceof HttpResponse) {\r\n              var endTime = (new Date()).getTime();\r\n              event = event.clone({ headers: event.headers.set('endTime', endTime.toString()) });\r\n              event = event.clone({ headers: event.headers.set('startTime', startTime.toString()) });\r\n              var diff = endTime - startTime;\r\n  \r\n              console.log(event.url + \" succeeded in \" + diff + \" milli seconds\");\r\n              \r\n            }\r\n            return event;\r\n          }), tap(event => { },\r\n            error => {\r\n              if (error instanceof HttpErrorResponse) {\r\n                var endTime = (new Date()).getTime();\r\n                var diff = endTime - startTime;\r\n                \r\n                console.log(error.url + \" failed in \" + diff + \" milli seconds\");\r\n              }\r\n            }\r\n          )\r\n      );\r\n    }\r\n  }","import { \n\tComponent,\n\tInput, \n\tOutput, \n\tEventEmitter }     from '@angular/core';\nimport { OnChanges } from '@angular/core';\n\n@Component({\n\tselector: 'pagination',\n    template: `\n    <nav *ngIf=\"totalItems > pageSize\" aria-label=\"Course navigation\">\n        <ul class=\"pagination\">\n            <li class=\"page-item\" [class.disabled]=\"currentPage == 1\" >\n                <a class=\"page-link\" (click)=\"previous()\" aria-label=\"Previous\">\n                <span aria-hidden=\"true\">&laquo;</span>\n                </a>\n            </li>\n            <li class=\"page-link\" [class.active]=\"currentPage == page\" *ngFor=\"let page of pages\" (click)=\"changePage(page)\">\n                <a>{{ page }}</a>\n            </li>\n            <li class=\"page-link\" [class.disabled]=\"currentPage == pages.length\">\n                <a (click)=\"next()\" aria-label=\"Next\">\n                <span aria-hidden=\"true\">&raquo;</span>\n                </a>\n            </li>\n        </ul>\n    </nav>  \n`\n})\nexport class PaginationComponent implements OnChanges {\n  \t@Input('total-items') totalItems;\n\t@Input('page-size') pageSize = 10;\n\t@Output('page-changed') pageChanged = new EventEmitter();\n\tpages: any[];\n\tpagesCount:number; \n\tcurrentPage:number;\n\n\tngOnChanges(){\n\t\tthis.currentPage = 1;\n\t\tthis.changePageRange(this.currentPage);\n\t}\n\n\tchangePageRange(page:number){\n\t\tlet startPage:number; \n\t\tlet endPage:number;\n\t\tthis.pagesCount = Math.ceil(this.totalItems / this.pageSize); \n\t\tif (this.pagesCount <= 5) {\n            startPage = 1;\n            endPage = this.pagesCount;\n        } else {\n            if (page <= 3) {\n             \tstartPage = 1;\n            \tendPage = 5;\n            } else if (page + 1 >= this.pagesCount) {\n                startPage = this.pagesCount - 4;\n                endPage = this.pagesCount;\n            } else {\n                startPage = page - 2;\n                endPage = page + 2;\n            }\n\t\t}\n\n\t\tthis.pages = [];\n\t\tfor (var i = startPage; i <= endPage; i++)\n\t\t\tthis.pages.push(i);\n\t\t\n\t}\n\n\tchangePage(page){\n\n\t\tthis.currentPage = page;\n\t\tthis.changePageRange(this.currentPage);\n\t\tthis.pageChanged.emit(page);\n\t}\n\n\tprevious(){\n\t\tif (this.currentPage == 1)\n\t\t\treturn;\n\n\t\tthis.currentPage--;\n\t\tthis.changePageRange(this.currentPage);\n\t\tthis.pageChanged.emit(this.currentPage);\n\t}\n\n\tnext(){\n\t\tif (this.currentPage == this.pages.length)\n\t\t\treturn; \n\t\t\n\t\tthis.currentPage++;\n\t\tthis.changePageRange(this.currentPage);\n\t\tthis.pageChanged.emit(this.currentPage);\n\t}\n}","\nimport { Injectable, Inject } from '@angular/core';\nimport { BaseService } from \"./base.service\";\n\nimport { Observable } from 'rxjs';\nimport { BehaviorSubject } from 'rxjs'; \nimport { DOCUMENT } from '@angular/common';\n\n// Add the RxJS Observable operators we need in this app.\nimport { tap } from 'rxjs/operators';\nimport { HttpParams, HttpClient } from '@angular/common/http';\n\n@Injectable()\nexport class AccountService {\n  private _isUserAuthenticatedSubject = new BehaviorSubject<boolean>(false);\n  isUserAuthenticated: Observable<boolean> = this._isUserAuthenticatedSubject.asObservable();\n  \n  constructor(@Inject(DOCUMENT) private document: Document, private httpClient: HttpClient) { }\n\n  updateUserAuthenticationStatus(){\n    return this.httpClient.get<boolean>(`/api/account/isAuthenticated`, {withCredentials: true})\n    .pipe(tap(isAuthenticated => {\n      console.log(isAuthenticated);\n      this._isUserAuthenticatedSubject.next(isAuthenticated);\n    }));    \n  }\n\n  setUserAsNotAuthenticated(){\n    this._isUserAuthenticatedSubject.next(false);\n  }\n\n  login() {\n    this.document.location.href = \"http://localhost:44305/api/account/SignInWithDiscord\";\n  }\n\n  logout() {\n    this.document.location.href = \"http://localhost:44305/api/account/logout\";\n  }\n  \n}\n","import { Observable } from 'rxjs'\n\n\nexport abstract class BaseService {  \n    \n    constructor() { }\n\n    protected handleError(error: any) {\n    var applicationError = error.headers.get('Application-Error');\n\n    // either applicationError in header or model error in body\n    if (applicationError) {\n      return Observable.throw(applicationError);\n    }\n\n    var modelStateErrors: string = '';\n    var serverError = error.json();\n\n    if (!serverError.type) {\n      for (var key in serverError) {\n        if (serverError[key])\n          modelStateErrors += serverError[key] + '\\n';\n      }\n    }\n\n    modelStateErrors = modelStateErrors = '' ? null : modelStateErrors;\n    return Observable.throw(modelStateErrors || 'Server error');\n  }\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n@Injectable()\r\nexport class ConfigurationService {\r\n  private configuration: IServerConfiguration;\r\n  constructor(private http: HttpClient) { }\r\n  loadConfig() {\r\n    return this.http.get<IServerConfiguration>('/api/Configuration/ConfigurationData')\r\n      .toPromise()\r\n      .then(result => {\r\n        this.configuration = <IServerConfiguration>(result);\r\n      }, error => console.error(error));\r\n  }\r\n  get getWebApiUrl() {\r\n    return this.configuration.WebApiUrl;\r\n  }\r\n}\r\nexport interface IServerConfiguration {\r\n    WebApiUrl: string;\r\n}\r\n","\nimport { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\n\n\n@Injectable()\nexport class NavigatorService{\n  constructor(private router: Router) {}\n\n  go(path: string) {\n    this.router.navigate([path]);\n  }\n\n  serviceNodeDetails(name: string) {\n    this.go('/xrouter-snodes/' + name);\n  }\n\n  spvWalletDetails(name: string) {\n    this.go('/spv-wallets/' + name);\n  }\n\n  xCloudServiceDetails(name: string) {\n    this.go('/xcloud-services/' + name);\n  }\n\n  \n\n}\n","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\n\n@Injectable()\nexport class ResponseTimeService {\n    getResonseTime: Subject<number> = new Subject<number>();\n    constructor() {}\n\n    onGetResponseTime(event){\n        this.getResonseTime.next(event);\n    }        \n}\n","import { Injectable, OnInit } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { map } from 'rxjs/operators';\r\nimport { BaseService } from './base.service';\r\n\r\n@Injectable()\r\nexport class SearchService extends BaseService {\r\n    private readonly apiEndpoint = 'blocknet/xrouter';\r\n    private baseEndpoint = '/api/';\r\n\r\n    constructor(private http: HttpClient) { \r\n        super();\r\n    }\r\n    search(queryString: string) {\r\n        let _URL = this.baseEndpoint + this.apiEndpoint + \"/?searchString=\" + queryString;\r\n        return this.http.get(_URL);\r\n    }\r\n}","import { Injectable } from '@angular/core';\nimport { map } from 'rxjs/operators';\nimport { HttpClient , HttpParams} from '@angular/common/http';\nimport { BaseService } from './base.service';\nimport { isNullOrUndefined } from 'util';\nimport { ConfigurationService } from './configuration.service';\n\n\n@Injectable()\nexport class XrouterApiService extends BaseService{\n  private readonly apiEndpoint = 'blocknet/xrouter';\n  private baseEndpoint = '/api/';\n\n  constructor(private http:HttpClient, private configurationService:ConfigurationService) {\n    super();\n   }\n\n  GetNetworkServices(){\n    return this.http.get(this.baseEndpoint + this.apiEndpoint + '/getNetworkServices');\n  }\n\n  GetNetworkSpvWallets(){\n    return this.http.get(this.baseEndpoint + this.apiEndpoint + '/getNetworkSpvWallets');\n  }\n\n  GetServiceInfo(service: string, nodePubKey?: string, node_count:number = 1){\n    let url = this.baseEndpoint + this.apiEndpoint + '/GetServiceInfo/?service=' + service;\n    if(!isNullOrUndefined(nodePubKey)){\n      url += '&nodePubKey=' + nodePubKey;\n    }\n    url += '&node_count=' + node_count;\n    return this.http.get(url);\n  }\n\n  GetSpvWalletInfo(service: string, nodePubKey?: string, node_count:number = 1){\n    let url = this.baseEndpoint + this.apiEndpoint + '/GetSpvWalletInfo/?service=' + service;\n    if(!isNullOrUndefined(nodePubKey)){\n      url += '&nodePubKey=' + nodePubKey;\n    }\n    url += '&node_count=' + node_count;\n    return this.http.get(url);\n  }\n\n  GetNodeInfo(nodePubKey:string, service?:string, node_count:number = 1){\n    let url = this.baseEndpoint + this.apiEndpoint + '/GetNodeInfo/?nodePubKey=' + nodePubKey;\n    if(!isNullOrUndefined(service)){\n      url += '&service=' + service;\n    }\n    url += '&node_count=' + node_count;\n    return this.http.get(url);\n  }\n\n  FilterXCloudServiceServiceNode(filter){\n    let url = this.baseEndpoint + this.apiEndpoint + '/FilterXCloudServiceServiceNode' + '?' + this.toQueryString(filter);\n    return this.http.get<any[]>(url);\n  }\n\n  GetServiceNodeList(filter){\n    let url = this.baseEndpoint + this.apiEndpoint + '/GetServiceNodeList' + '?' + this.toQueryString(filter);\n    return this.http.get<any[]>(url);\n  }\n\n  private toQueryString(obj) {  \n    var parts = [];\n    for (var property in obj) {\n      var value = obj[property];\n      if (value != null && value != undefined) \n        parts.push(encodeURIComponent(property) + '=' + encodeURIComponent(value));\n    }\n\n    return parts.join('&');\n  }\n\n  GetServiceNodeCount(){\n    return this.http.get<number>(this.baseEndpoint + this.apiEndpoint + '/GetServiceNodeCount');\n  }\n\n  Service(request:any){\n    let url = this.baseEndpoint + this.apiEndpoint + '/Service';\n    return this.http.post(url, request);\n  }\n\n  GetBlockCount(blockchain:string, node_count:number = 1){\n    let url = this.baseEndpoint + this.apiEndpoint + '/GetBlockCount?blockchain=' + blockchain;\n    url += '&node_count=' + node_count;\n    return this.http.get(url);\n  }\n\n  GetBlockHash(blockchain:string, blockNumber:string, node_count:number = 1){\n    let url = this.baseEndpoint + this.apiEndpoint + '/GetBlockHash?blockchain=' + blockchain;\n    url += '&block_number=' + blockNumber;\n    url += '&node_count=' + node_count;\n\n    return this.http.get(url);\n  }\n\n  GetBlock(blockchain:string, blockHash:string, node_count:number = 1){\n    let url = this.baseEndpoint + this.apiEndpoint + '/GetBlock?blockchain=' + blockchain;\n    url += '&block_hash=' + blockHash;\n    url += '&node_count=' + node_count;\n    return this.http.get(url);\n  }\n\n  GetBlocks(blockchain:string, blockHashes:string[], node_count:number = 1){\n    let url = this.baseEndpoint + this.apiEndpoint + '/GetBlocks';\n\n    let params = new HttpParams();\n    params = params.append('blockchain', blockchain);\n    params = params.append('block_hashes', JSON.stringify(blockHashes));\n    params = params.append('node_count', node_count.toString());\n    return this.http.get(url, {params: params});\n  }\n\n  GetTransaction(blockchain:string, txid:string, node_count:number = 1){\n    let url = this.baseEndpoint + this.apiEndpoint + '/GetTransaction?blockchain=' + blockchain;\n    url += '&txid=' + txid;\n    url += '&node_count=' + node_count;\n    return this.http.get(url);\n  }\n\n  GetTransactions(blockchain:string, txids:string[], node_count:number = 1){\n    let url = this.baseEndpoint + this.apiEndpoint + '/GetTransactions';\n\n    let params = new HttpParams();\n    params = params.append('blockchain', blockchain);\n    params = params.append('txids', JSON.stringify(txids));\n    params = params.append('node_count', node_count.toString());\n    return this.http.get(url, {params: params});\n  }\n\n  DecodeRawTransaction(blockchain:string, txHex:string, node_count:number = 1){\n    let url = this.baseEndpoint + this.apiEndpoint + '/DecodeRawTransaction?blockchain=' + blockchain;\n    url += '&txHex=' + txHex;\n    url += '&node_count=' + node_count;\n    return this.http.get(url);\n  }\n\n  SendTransaction(blockchain:string, signedTx:string){\n    let url = this.baseEndpoint + this.apiEndpoint + '/SendTransaction?blockchain=' + blockchain;\n    url += '&signedTx=' + signedTx;\n    return this.http.get(url);\n  }\n\n\n\n}\n","module.exports = \"\"","module.exports = \"\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'sign-in',\r\n  templateUrl: './sign-in.component.html',\r\n  styleUrls: ['./sign-in.component.css']\r\n})\r\nexport class SignInComponent {\r\n}\r\n","module.exports = \"\"","module.exports = \"<h2>SPV Wallets</h2>\\n<service-list \\n        [services]=\\\"spvWallets\\\" \\n        [query-init]=\\\"query\\\"\\n        (query-changed)=\\\"onQueryChange($event)\\\">\\n</service-list>\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { XrouterApiService } from '../shared/services/xrouter.service';\n\n@Component({\n  selector: 'app-spv-wallets',\n  templateUrl: './spv-wallets.component.html',\n  styleUrls: ['./spv-wallets.component.css']\n})\nexport class SpvWalletsComponent implements OnInit {\n\n  private readonly PAGE_SIZE = 3; \n\n  spvWallets = {};\n\n  query:any = {\n    pageSize: this.PAGE_SIZE,\n  };\n  queryPastCourses:any = {\n    pageSize: this.PAGE_SIZE,\n  }; \n\n  constructor(private router: Router, private xrouterService: XrouterApiService) { }\n\n  ngOnInit() {\n    this.populateSpvWallets();\n  }\n\n  private populateSpvWallets(){\n    this.xrouterService.GetNetworkSpvWallets()\n      .subscribe(result => this.spvWallets = result);\n  }\n\n  onQueryChange(query){\n    this.query = query;\n    this.populateSpvWallets();\n  }\n\n}\n","module.exports = \"pre{\\r\\n    overflow:auto;\\r\\n    max-height:50vh;\\r\\n    background: #f5f2f0;\\r\\n}\\r\\n\\r\\npre > code{\\r\\n  display: block;\\r\\n  padding: 1rem;\\r\\n  word-wrap: break-word;\\r\\n  white-space: pre-line;\\r\\n}\"","module.exports = \"<div *ngIf=\\\"loading else loaded\\\">\\n    Fetching Data...\\n  </div>\\n\\n<ng-template #loaded>\\n    <h1>Service Node</h1>\\n    <table class=\\\"table\\\">\\n      <tbody>\\n        <tr>\\n          <td>NodePubKey</td>\\n          <td>{{nodePubKey}}</td>\\n        </tr>\\n        <tr>\\n          <td>Score</td>\\n          <td>{{result?.score}}</td>\\n        </tr>\\n        <tr>\\n          <td>Banned</td>\\n          <td>{{result?.banned}}</td>\\n        </tr>\\n        <tr>\\n          <td>Payment Address</td>\\n          <td><a href=\\\"https://chainz.cryptoid.info/block/address.dws?{{result.paymentAddress}}\\\">{{result?.paymentAddress}}</a></td>\\n        </tr>\\n        <tr>\\n          <td>Fee Default</td>\\n          <td>{{result?.feeDefault}} BLOCK</td>\\n        </tr>\\n      </tbody>\\n    </table>\\n    <ngb-tabset>     \\n        <ngb-tab title=\\\"Configuration\\\">\\n            <ng-template ngbTabContent>\\n                <h3>Config</h3>\\n                <pre>\\n                  <code>{{result?.config}}</code>\\n                </pre>\\n                <!-- <div class=\\\"well overflow-visible\\\" style=\\\"white-space: pre-line\\\"> -->\\n                <!-- </div>             -->\\n            </ng-template>\\n        </ngb-tab>\\n        <ngb-tab title=\\\"Fees\\\">\\n            <ng-template ngbTabContent>\\n                <h3>Fees</h3>\\n                <table class=\\\"table\\\">\\n                  <tbody>\\n                    <tr *ngFor=\\\"let fee of result.fees | keyvalue\\\">\\n                      <td>{{fee.key}}</td>\\n                      <td>{{fee.value}} BLOCK</td>\\n                    </tr>\\n                  </tbody>\\n                </table>\\n            </ng-template>\\n          </ngb-tab>\\n        <ngb-tab title=\\\"Spv Wallets\\\">\\n            <ng-template ngbTabContent>\\n              <h3>Spv Wallet</h3>  \\n                <table class=\\\"table\\\">\\n                    <tbody>\\n                      <tr *ngFor=\\\"let s of result?.spvWallets\\\">\\n                        <td><a [routerLink]=\\\"['/spv-wallets', 'xr::' + s, nodePubKey]\\\">{{s}}</a></td>\\n                      </tr>\\n                    </tbody>\\n                </table>\\n            </ng-template>\\n          </ngb-tab>\\n        <ngb-tab title=\\\"XCloud Services\\\">\\n            <ng-template ngbTabContent>\\n                <h3>XCloud Services offered by this Service Node</h3>\\n\\n                <div *ngIf=\\\"result?.services.length == 0 else notEmpty\\\">\\n                    This service node doesn't offer XCloud Services yet :(\\n                  </div>\\n                  \\n                <ng-template #notEmpty>\\n                    <table class=\\\"table\\\">\\n                        <thead>\\n                            <tr>\\n                                <th>Service</th>\\n                            </tr>\\n                        </thead>\\n                        <tbody>\\n                          <tr *ngFor=\\\"let s of result?.services\\\">\\n                            <td><a [routerLink]=\\\"['/xcloud-services', 'xrs::' + s]\\\">{{s}}</a></td>\\n                          </tr>\\n                        </tbody>\\n                    </table>\\n                    <ngb-pagination [collectionSize]=\\\"serviceNodes?.totalItems\\\" [pageSize]=\\\"query.pageSize\\\" [(page)]=\\\"query.page\\\" (pageChange)=\\\"pageChange($event)\\\"></ngb-pagination>\\n                  </ng-template>  \\n              </ng-template>\\n            \\n        </ngb-tab>\\n    </ngb-tabset>\\n  </ng-template>\\n    \\n  \\n\"","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Location } from '@angular/common';\nimport { XrouterApiService } from '../shared/services/xrouter.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { isNullOrUndefined } from 'util';\nimport { takeUntil } from 'rxjs/operators';\nimport { Subject } from 'rxjs';\n\n@Component({\n  selector: 'app-view-snode',\n  templateUrl: './view-snode.component.html',\n  styleUrls: ['./view-snode.component.css']\n})\nexport class ViewSnodeComponent implements OnInit, OnDestroy {\n  private readonly PAGE_SIZE = 6; \n\n  protected ngUnsubscribe: Subject<void> = new Subject<void>();\n  loading:boolean;\n  config:any;\n  nodePubKey:string;\n  service:string;\n  xCloudServices:any;\n  result:any;\n\n  query:any = {\n    page: 1,\n    pageSize: this.PAGE_SIZE,\n  };\n\n  constructor(\n    private xrouterApiService:XrouterApiService,\n    private router:Router,\n    private route:ActivatedRoute, \n    private location:Location\n  ) \n  { \n    route.params.subscribe(p => {\n      this.nodePubKey = p['nodePubKey'];\n      this.service = p['service'];\n      if (isNullOrUndefined(this.nodePubKey)) {\n        router.navigate(['']);\n        return; \n      }\n      this.loading = true;\n    });\n  }\n\n  ngOnInit() {\n    this.xrouterApiService.GetNodeInfo(this.nodePubKey, this.service)\n      .pipe(takeUntil(this.ngUnsubscribe))\n      .subscribe(result => {\n        this.result = result;\n        this.loading = false;\n      },\n      error => {\n        this.router.navigate(['/error'], {queryParams: error});\n      });\n  }\n\n  ngOnDestroy() {\n    // This aborts all HTTP requests.\n    this.ngUnsubscribe.next();\n    // This completes the subject properlly.\n    this.ngUnsubscribe.complete();\n  }\n\n  private populateXCloudServices(){\n    this.xrouterApiService.FilterXCloudServiceServiceNode(this.query)\n      .subscribe(result => {        \n        this.xCloudServices = result;\n      });\n  }\n\n  ngOnChanges(){\n    this.initializeQuery();\n\t}\n\n  onFilterChange() {\n    this.query.page = 1; \n    this.populateXCloudServices();\n  }\n\n  private initializeQuery(){}\n\n  resetFilter() {\n    this.query = {\n      page: 1,\n      pageSize: this.PAGE_SIZE,\n    };\n    this.populateXCloudServices();\n  }\n\n  onPageChange(page) {\n    this.query.page = page;\n    this.populateXCloudServices();\n  }\n\n}","module.exports = \"pre{\\r\\n    overflow:auto;\\r\\n    max-height:50vh;\\r\\n    background: #f5f2f0;\\r\\n}\\r\\n\\r\\npre > code{\\r\\n  display: block;\\r\\n  padding: 1rem;\\r\\n  word-wrap: break-word;\\r\\n  /* white-space: pre-line; */\\r\\n}\\r\\n\\r\\n.ellipsis{\\r\\n  max-width: 0;\\r\\n  overflow: hidden;\\r\\n  text-overflow: ellipsis;\\r\\n  white-space: nowrap;\\r\\n}\"","module.exports = \"<div *ngIf=\\\"loading else loaded\\\">\\n  Fetching data...\\n  </div>\\n\\n<ng-template #loaded>\\n  <h1>SPV Wallet</h1>\\n  <h2>{{ shortSpvWalletName }}</h2>\\n  <!-- <table class=\\\"table\\\">\\n      <tbody>\\n        <tr>\\n          <td>Usage Instructions Blocknet CLI</td>\\n          <td>xrService {{spvWalletName}}</td>\\n      </tr>\\n      </tbody>\\n    </table> -->\\n\\n  <ngb-tabset #t>     \\n      <ngb-tab title=\\\"Try it out\\\" id=\\\"try-it-out\\\">\\n          <ng-template ngbTabContent>\\n              <h3>Try out a {{ spvWalletName }} command</h3>\\n              <div class=\\\"row\\\">\\n                <div class=\\\"col-md-3 col-sm-12\\\">\\n                  <h4>Request</h4>\\n                  <form (ngSubmit)=\\\"onSubmit()\\\" #spvWalletForm=\\\"ngForm\\\">\\n                    <label for=\\\"spvCommand\\\">Spv Command</label>\\n                    <select class=\\\"form-control\\\" [(ngModel)]=\\\"selectedSpvCommand\\\" name=\\\"selectedSpvCommand\\\">\\n                        <option *ngFor=\\\"let c of result.spvConfig.commands\\\" [value]=\\\"c.command\\\">{{c.command}}</option>\\n                    </select>\\n                    <div [ngSwitch]=\\\"selectedSpvCommand\\\">\\n                      <div *ngSwitchCase=\\\"'xrGetBlockCount'\\\">\\n                        \\n                      </div>\\n                      <div *ngSwitchCase=\\\"'xrGetBlockHash'\\\">\\n                          <label for=\\\"blockNumber\\\">Block Number</label>\\n                          <input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"blockNumber\\\" ngModel name=\\\"blockNumber\\\">\\n                      </div>\\n                      <div *ngSwitchCase=\\\"'xrGetBlock'\\\">\\n                          <label for=\\\"blockHash\\\">Block Hash</label>\\n                          <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"blockHash\\\" ngModel name=\\\"blockHash\\\">\\n                      </div>\\n                      <div *ngSwitchCase=\\\"'xrGetBlocks'\\\">\\n                        <h4>Block hash inputs</h4>\\n                        <button type=\\\"button\\\" (click)=\\\"addBlockHash()\\\" class=\\\"btn btn-primary btn-sm\\\">Add</button> \\n                        <hr>\\n                        <div *ngFor=\\\"let bh of blockHashes; let i = index;\\\">\\n                            <label for=\\\"blockHash-{{i}}\\\">Blockhash-{{i}}</label>\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"blockHash-{{i}}\\\" [(ngModel)]=\\\"blockHashes[i]\\\" name=\\\"blockHash-{{i}}\\\">\\n                            <button type=\\\"button\\\" class=\\\"btn btn-danger btn-sm\\\" (click)=\\\"removeBlockHash(i)\\\">Remove</button>\\n                        </div>\\n                        <hr>\\n                      </div>\\n                      <div *ngSwitchCase=\\\"'xrGetTransaction'\\\">\\n                          <label for=\\\"txid\\\">Txid</label>\\n                          <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"txid\\\" ngModel name=\\\"txid\\\">\\n                      </div>\\n                      <div *ngSwitchCase=\\\"'xrGetTransactions'\\\">\\n                        <h4>TxId inputs</h4>\\n                        <button type=\\\"button\\\" (click)=\\\"addTxId()\\\" class=\\\"btn btn-primary btn-sm\\\">Add</button> \\n                        <hr>\\n                          <div *ngFor=\\\"let txid of txIds; let i = index;\\\">\\n                              <label for=\\\"txid-{{i}}\\\">txid-{{i}}</label>\\n                              <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"txid-{{i}}\\\" [(ngModel)]=\\\"txIds[i]\\\" name=\\\"txid-{{i}}\\\">\\n                              <button type=\\\"button\\\" class=\\\"btn btn-danger btn-sm\\\" (click)=\\\"removeTxId(i)\\\">Remove</button>\\n                          </div>\\n                        <hr>\\n                      </div>\\n                      <div *ngSwitchCase=\\\"'xrDecodeRawTransaction'\\\">\\n                          <label for=\\\"txHex\\\">Tx Hex</label>\\n                          <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"txHex\\\" ngModel name=\\\"txHex\\\">\\n                      </div>\\n                      <div *ngSwitchCase=\\\"'xrSendTransaction'\\\">\\n                          <label for=\\\"signedTx\\\">Signed Tx</label>\\n                          <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"signedTx\\\" ngModel name=\\\"signedTx\\\">\\n                      </div>\\n                    </div>\\n              \\n                    <label for=\\\"nodeCount\\\">Node count</label>\\n                    <input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"nodeCount\\\"  [(ngModel)]=\\\"nodeCount\\\" name=\\\"nodeCount\\\">\\n                    <br>\\n                    <button type=\\\"submit\\\" class=\\\"btn btn-outline-primary\\\">Submit</button>\\n                  </form>\\n                </div>\\n                <div class=\\\"col-md-9 col-sm-12\\\">\\n                  <h4>Response</h4>\\n                  <pre>\\n                    <code>\\n                      <div *ngIf=\\\"resultLoading else resultLoaded\\\">\\n                        Executing...\\n                      </div>\\n                    <ng-template #resultLoaded> {{ spvWalletCommandResult }}</ng-template>\\n                    </code>                    \\n                  </pre>\\n\\n                </div>\\n              </div>\\n          </ng-template>\\n        </ngb-tab>\\n        <ngb-tab title=\\\"Service Node Info\\\">\\n          <ng-template ngbTabContent>\\n              <h3>Offered By</h3>\\n              <div class=\\\"table-responsive\\\">\\n                <table class=\\\"table\\\">\\n                  <tbody>\\n                    <tr>\\n                      <td>NodePubKey</td>\\n                      <td class=\\\"ellipsis\\\"><a [routerLink]=\\\"['/xrouter-snodes', result.node.nodePubKey]\\\">{{result.node.nodePubKey}}</a></td>\\n                    </tr>\\n                    <tr>\\n                      <td>Score</td>\\n                      <td>{{result.node.score}}</td>\\n                    </tr>\\n                    <tr>\\n                      <td>Banned</td>\\n                      <td>{{result.node.banned}}</td>\\n                    </tr>\\n                    <tr>\\n                      <td>Default Fee</td>\\n                      <td>{{result.node.feeDefault}} BLOCK</td>\\n                    </tr>\\n                \\n                  </tbody>\\n                </table>\\n              </div>\\n          </ng-template>\\n        </ngb-tab>\\n        <ngb-tab title=\\\"Commands\\\">\\n            <ng-template ngbTabContent>\\n                <h3>Commands</h3>\\n                <div class=\\\"table-responsive\\\">\\n                  <table class=\\\"table\\\">\\n                    <thead>\\n                        <tr>\\n                            <th>Command</th>\\n                            <th>Fee (BLOCK)</th>\\n                            <th>Request Limit</th>\\n                            <th>Payment Address</th>\\n                            <th>Try it out</th>\\n                        </tr>\\n                    </thead>\\n                    <tbody>\\n                        <tr *ngFor=\\\"let c of result.spvConfig.commands\\\">\\n                            <td class=\\\"ellipsis\\\">{{c.command}}</td>\\n                            <td>{{c.fee}}</td>\\n                            <td>{{c.requestLimit}}</td>\\n                            <td class=\\\"ellipsis\\\">{{c.paymentAddress}}</td>\\n                            <td>  \\n                              <button class=\\\"btn btn-outline-primary\\\" (click)=\\\"onSelectTryItOut(c.command)\\\">Try me!</button>\\n                            </td>\\n                        </tr>\\n                    </tbody>\\n                  </table>\\n                </div>\\n            </ng-template>\\n          </ngb-tab> \\n      <ngb-tab title=\\\"Offered by others\\\">\\n        <ng-template ngbTabContent>\\n            <h3>Other Service Nodes that offer this service</h3>\\n            <div class=\\\"table-responsive\\\">\\n              <table class=\\\"table\\\">\\n                <thead>\\n                  <tr>\\n                    <th>Address</th>\\n                    <th>Score</th>\\n                    <th>Banned</th>\\n                  </tr>\\n                </thead>\\n                <tbody>\\n                  <tr *ngFor=\\\"let s of result.otherNodes\\\">\\n                    <td class=\\\"ellipsis\\\"><a [routerLink]=\\\"['/xrouter-snodes', s.nodePubKey]\\\">{{s.nodePubKey}}</a></td>\\n                    <td>{{s.score}}</td>\\n                    <td>{{s.banned}}</td>\\n                  </tr>\\n                </tbody>\\n              </table>\\n            </div>\\n        </ng-template>\\n      </ngb-tab>\\n    </ngb-tabset>\\n</ng-template>  \"","import { Component, OnInit, OnDestroy, ViewChild, ElementRef } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Location } from '@angular/common';\nimport { XrouterApiService } from '../shared/services/xrouter.service';\nimport { Router, ActivatedRoute, NavigationEnd } from '@angular/router';\nimport { isNullOrUndefined } from 'util';\nimport { finalize, takeUntil } from 'rxjs/operators';\nimport { HttpRequestTimeInterceptor } from '../shared/http-responsetime-logging/http-responsetime-logging.interceptor';\nimport { forkJoin, Observable, Subject } from 'rxjs';\nimport { ResponseTimeService } from '../shared/services/responsetime.service';\nimport { NgbTabset } from \"@ng-bootstrap/ng-bootstrap\";\n\n@Component({\n  selector: 'app-view-spv-wallet',\n  templateUrl: './view-spv-wallet.component.html',\n  styleUrls: ['./view-spv-wallet.component.css']\n})\nexport class ViewSpvWalletComponent implements OnInit, OnDestroy {\n  protected ngUnsubscribe: Subject<void> = new Subject<void>();\n  navigationSubscription;\n  loading:boolean;\n  spvWalletName:string;\n  shortSpvWalletName:string;\n  nodePubKey:string;\n  nodeCount:number;\n  result:any;\n\n  @ViewChild('spvWalletForm') spvWalletForm: NgForm;\n  @ViewChild('t') tab: NgbTabset;\n  selectedSpvCommand:string;\n  blockHashes:string[] = [\"\"];\n  txIds:string[] = [\"\"];\n  \n  resultLoading:boolean;\n  spvWalletCommandResult:any;\n  responseTime:number;\n\n  constructor(\n    private xrouterApiService:XrouterApiService,\n    private responseTimeService: ResponseTimeService,\n    private router:Router,\n    private route:ActivatedRoute, \n    private location:Location\n    ) \n    { \n      route.params.subscribe(p => {\n        this.spvWalletName = p['name'];\n        // this.shortSpvWalletName = this.shortSpvWalletName.replace(\"xr::\", \"\");\n        this.nodePubKey = p['nodePubKey'];\n        if (isNullOrUndefined(this.spvWalletName)) {\n          router.navigate(['']);\n          return; \n        }\n        this.loading = true;\n      });\n\n      this.navigationSubscription = this.router.events.subscribe((e:any) => {\n        if(e instanceof NavigationEnd){\n          this.initializeData();\n        }\n      });\n    }\n\n  private initializeData(){\n    this.xrouterApiService.GetSpvWalletInfo(this.spvWalletName, this.nodePubKey)\n        .pipe(takeUntil(this.ngUnsubscribe))\n        .subscribe(result => {\n          this.result = result;\n          this.location.replaceState(\"/spv-wallets/\" + this.spvWalletName + \"/\" + this.result.node.nodePubKey);\n          this.loading = false;\n          \n          this.selectedSpvCommand = this.result.spvConfig.commands[0].command;\n          this.nodeCount = 1;\n          this.resultLoading = false;\n        },\n        error => {\n          this.router.navigate(['/error'], {queryParams: error});\n        });\n  }\n\n  private callXrouterCommand(callback:Observable<object>){\n    callback.pipe(\n          finalize(() => {\n            this.resultLoading = false;\n        }))\n        .subscribe(result => {\n          this.spvWalletCommandResult = JSON.stringify(result, undefined, 2);\n        },\n        error => {\n          this.spvWalletCommandResult = error;\n        });\n  }\n\n  onSubmit() {\n    this.resultLoading = true;\n    let nodecount = this.spvWalletForm.value.nodeCount;\n    switch(this.spvWalletForm.value.selectedSpvCommand){\n      case \"xrGetBlockCount\":{  \n        this.callXrouterCommand(this.xrouterApiService.GetBlockCount(this.spvWalletName, nodecount));\n        break;    \n      }\n      case \"xrGetBlockHash\":{\n        this.callXrouterCommand(this.xrouterApiService.GetBlockHash(this.spvWalletName, this.spvWalletForm.value.blockNumber, nodecount));        \n        break;\n      }\n      case \"xrGetBlock\":{\n        this.callXrouterCommand(this.xrouterApiService.GetBlock(this.spvWalletName, this.spvWalletForm.value.blockHash, nodecount));\n        break;\n      }\n      case \"xrGetBlocks\":{\n        this.callXrouterCommand(this.xrouterApiService.GetBlocks(this.spvWalletName, this.blockHashes, nodecount));\n        break;\n      }\n      case \"xrGetTransaction\":{\n        this.callXrouterCommand(this.xrouterApiService.GetTransaction(this.spvWalletName, this.spvWalletForm.value.txid, nodecount));\n        break;\n      }\n      case \"xrGetTransactions\":{\n        this.callXrouterCommand(this.xrouterApiService.GetTransactions(this.spvWalletName, this.txIds, nodecount));\n        break;\n      }\n      case \"xrDecodeRawTransaction\":{\n        this.callXrouterCommand(this.xrouterApiService.DecodeRawTransaction(this.spvWalletName, this.spvWalletForm.value.txHex, nodecount))        \n        break;\n      }\n      case \"xrSendTransaction\":{\n        this.callXrouterCommand(this.xrouterApiService.SendTransaction(this.spvWalletName, this.spvWalletForm.value.signedTx));\n        break;\n      }\n    }\n  }\n\n  addTxId(){\n    this.txIds.push(\"\");\n  }\n\n  removeTxId(index: number){\n    this.txIds.splice(index, 1);\n  }\n\n  addBlockHash(){\n    this.blockHashes.push(\"\");\n  }\n\n  removeBlockHash(index: number){\n    this.blockHashes.splice(index, 1);\n  }\n\n  onSelectTryItOut(command:string){\n    this.selectedSpvCommand = this.result.spvConfig.commands.find(c => c.command == command).command;\n    this.tab.select('try-it-out');\n  }\n\n  ngOnInit() {}\n  ngOnDestroy(){\n    if (this.navigationSubscription) {\n      this.navigationSubscription.unsubscribe();\n    }\n\n    // This aborts all HTTP requests.\n    this.ngUnsubscribe.next();\n    // This completes the subject properlly.\n    this.ngUnsubscribe.complete();\n  }\n}\n\n\n","module.exports = \"pre{\\r\\n    overflow:auto;\\r\\n    max-height:50vh;\\r\\n    background: #f5f2f0;\\r\\n}\\r\\n\\r\\npre > code{\\r\\n  display: block;\\r\\n  padding: 1rem;\\r\\n  word-wrap: break-word;\\r\\n  white-space: pre-line;\\r\\n}\\r\\n\\r\\n.ellipsis{\\r\\n  max-width: 0;\\r\\n  overflow: hidden;\\r\\n  text-overflow: ellipsis;\\r\\n  white-space: nowrap;\\r\\n}\"","module.exports = \"<div *ngIf=\\\"loading else loaded\\\">\\n  Fetching data...\\n</div>\\n\\n<ng-template #loaded>\\n    <h1>XCloud Service</h1>\\n    <h2>{{serviceName}}</h2>\\n    <div class=\\\"table-responsive\\\">\\n      <table class=\\\"table\\\">\\n        <tbody>\\n        <tr>\\n          <td>Fee</td>\\n          <td>{{result.service.fee}} BLOCK</td>\\n        <tr>\\n            <td>Parameter Types</td>\\n            <td>{{result.service.parameters}}</td>\\n        </tr>\\n        <tr>\\n          <td>Description</td>\\n          <td>{{result.service.helpDescription}}</td>\\n        </tr>\\n        <tr>\\n            <td>Usage Instructions Blocknet CLI</td>\\n            <td>xrService {{serviceName}} [{{result.service.parameters}}]</td>\\n        </tr>\\n        </tbody>\\n      </table>\\n    </div>\\n\\n    <ngb-tabset>     \\n        <ngb-tab title=\\\"Try it out\\\">\\n            <ng-template ngbTabContent>\\n                <h3>Try it out</h3>\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"col-md-3 col-sm-12\\\">\\n                    <h4>Request</h4>\\n                    <form (ngSubmit)=\\\"onSubmit()\\\" #serviceForm=\\\"ngForm\\\">\\n                      <div class=\\\"form-group\\\" *ngFor=\\\"let p of result.service.parametersList; let i = index\\\">\\n                        <label for=\\\"param-{{i}}\\\">Param-{{i}} [{{p}}] </label>\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"param-{{i}}\\\" [(ngModel)]=\\\"parametervalues[i]\\\" name=\\\"param-{{i}}\\\">\\n                      </div>\\n                      <br>\\n                      <button type=\\\"submit\\\" class=\\\"btn btn-outline-primary\\\">Submit</button>\\n                    </form> \\n                  </div>\\n                  <div class=\\\"col-md-9 col-sm-12\\\">\\n                    <h4>Response</h4>\\n                      <pre>\\n                        <code>\\n                          <div *ngIf=\\\"resultLoading else resultLoaded\\\">\\n                            Executing...\\n                          </div>\\n                          <ng-template #resultLoaded>\\n                            {{ serviceResult | json }}\\n                          </ng-template>\\n                        </code>\\n                      </pre>\\n                  </div>\\n                </div>\\n          \\n            </ng-template>\\n          </ngb-tab>\\n          <ngb-tab title=\\\"Service Node Info\\\">\\n              <ng-template ngbTabContent>\\n                  <h3>Offered By</h3>\\n                  <div class=\\\"table-responsive\\\">\\n                    <table class=\\\"table\\\">\\n                      <tbody>\\n                        <tr>\\n                          <td>NodePubKey</td>\\n                          <td class=\\\"ellipsis\\\"><a [routerLink]=\\\"['/xrouter-snodes', result.node.nodePubKey]\\\">{{result.node.nodePubKey}}</a></td>\\n                        </tr>\\n                        <tr>\\n                          <td>Score</td>\\n                          <td>{{result.node.score}}</td>\\n                        </tr>\\n                        <tr>\\n                          <td>Banned</td>\\n                          <td>{{result.node.banned}}</td>\\n                        </tr>\\n                        <tr>\\n                          <td>Default Fee</td>\\n                          <td>{{result.node.feeDefault}} BLOCK</td>\\n                        </tr>\\n                    \\n                      </tbody>\\n                    </table>\\n                  </div>\\n              </ng-template>\\n            </ngb-tab>\\n            <ngb-tab title=\\\"Configuration\\\">\\n                <ng-template ngbTabContent>\\n                  <h3>Configuration {{serviceName}}.conf</h3>\\n                  <pre>\\n                    <code>{{result.service.config}}</code>\\n                  </pre>\\n                </ng-template>\\n              </ngb-tab>\\n          </ngb-tabset> \\n    \\n    <!-- <h3>Other Service Nodes that offer this service</h3>\\n    <table class=\\\"table\\\">\\n      <thead>\\n        <tr>\\n          <th>Address</th>\\n          <th>Score</th>\\n          <th>Banned</th>\\n        </tr>\\n      </thead>\\n      <tbody>\\n        <tr *ngFor=\\\"let s of result.otherNodes\\\">\\n          <td><a [routerLink]=\\\"['/xrouter-snodes', s.nodePubKey]\\\">{{s.nodePubKey}}</a></td>\\n          <td>{{s.score}}</td>\\n          <td>{{s.banned}}</td>\\n        </tr>\\n      </tbody>\\n    </table>   -->\\n</ng-template>  \"","import { Component, OnInit, OnDestroy, ViewChild } from '@angular/core';\nimport { Location } from '@angular/common';\nimport { XrouterApiService } from '../shared/services/xrouter.service';\nimport { Router, ActivatedRoute, NavigationEnd } from '@angular/router';\nimport { isNullOrUndefined } from 'util';\nimport { NgForm } from '@angular/forms';\nimport { finalize, takeUntil } from 'rxjs/operators';\nimport { Subject } from 'rxjs';\n\n@Component({\n  selector: 'app-view-xr-service',\n  templateUrl: './view-xr-service.component.html',\n  styleUrls: ['./view-xr-service.component.css']\n})\nexport class ViewXrServiceComponent implements OnInit, OnDestroy {\n  protected ngUnsubscribe: Subject<void> = new Subject<void>();\n  navigationSubscription;\n  loading:boolean = true;\n  serviceName:string;\n  result:any;\n  parametervalues:string[];\n\n  @ViewChild('serviceForm') serviceForm: NgForm;\n  serviceResult:any;\n  resultLoading:boolean;\n\n  constructor(\n    private xrouterApiService:XrouterApiService,\n    private router:Router,\n    private route:ActivatedRoute, \n    private location:Location\n    ) \n    { \n      route.params.subscribe(p => {\n        this.serviceName = p['name'];\n        if (isNullOrUndefined(this.serviceName)) {\n          router.navigate(['']);\n          return; \n        }\n      });\n\n      this.navigationSubscription = this.router.events.subscribe((e:any) => {\n        if(e instanceof NavigationEnd){\n          this.initializeData();\n        }\n      });\n    }\n\n  private initializeData(){\n    this.xrouterApiService.GetServiceInfo(this.serviceName)\n      .pipe(takeUntil(this.ngUnsubscribe))\n      .subscribe(result => {\n        this.result = result;\n        this.location.replaceState(\"/xcloud-services/\" + this.serviceName + \"/\" + this.result.node.nodePubKey);\n        if(this.result.service.parametersList)\n          this.parametervalues = new Array<string>(this.result.service.parametersList.length);\n\n        this.loading = false;\n        this.resultLoading = false;\n      },\n      error => {\n        this.router.navigate(['/error'], {queryParams: error});\n      });\n  }\n  ngOnInit() {}\n\n  onSubmit() {  \n    this.resultLoading = true; \n    this.xrouterApiService.Service(new ServiceRequest(this.serviceName, this.parametervalues, 1))\n    .pipe(\n      finalize(() => {\n        this.resultLoading = false;\n    }))  \n    .subscribe(result => {\n        this.serviceResult = result;\n      },\n      error => {\n        this.router.navigate(['/error'], {queryParams: error})\n      });    \n  }\n\n  ngOnDestroy(){\n    if (this.navigationSubscription) {\n      this.navigationSubscription.unsubscribe();\n    }\n    // This aborts all HTTP requests.\n    this.ngUnsubscribe.next();\n    // This completes the subject properlly.\n    this.ngUnsubscribe.complete();\n  }\n\n}\n\nclass ServiceRequest{\n  constructor(\n    service:string,\n    parameters:string[],\n    nodecount:number\n  ) { \n    this.service = service;\n    this.parameters = parameters;\n    this.nodecount = nodecount;\n   }\n  \n   service:string;\n   parameters:string[];\n   nodecount:number;\n}\n\n\n","module.exports = \"\"","module.exports = \"<h2>XCloud Services</h2>\\n<service-list \\n        [services]=\\\"services\\\" \\n        [query-init]=\\\"query\\\"\\n        (query-changed)=\\\"onQueryChange($event)\\\">\\n</service-list>\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { XrouterApiService } from '../shared/services/xrouter.service';\n\n@Component({\n  selector: 'app-services',\n  templateUrl: './xr-services.component.html',\n  styleUrls: ['./xr-services.component.css']\n})\nexport class XrServicesComponent implements OnInit {\n\n  private readonly PAGE_SIZE = 3; \n\n  services = {};\n\n  query:any = {\n    pageSize: this.PAGE_SIZE,\n  };\n  queryPastCourses:any = {\n    pageSize: this.PAGE_SIZE,\n  }; \n\n  constructor(private router: Router, private xrouterService: XrouterApiService) { }\n\n  ngOnInit() {\n    this.populateServices();\n  }\n\n  private populateServices(){\n    this.xrouterService.GetNetworkServices()\n      .subscribe(result => {\n        this.services = result;\n      });\n  }\n\n  onQueryChange(query){\n    this.query = query;\n    this.populateServices();\n  }\n}\n","// The file contents for the current environment will overwrite these during build.\r\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\r\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\r\n// The list of which env maps to which file can be found in `.angular-cli.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nexport function getBaseUrl() {\r\n  return document.getElementsByTagName('base')[0].href;\r\n}\r\n\r\nconst providers = [\r\n  { provide: 'BASE_URL', useFactory: getBaseUrl, deps: [] }\r\n];\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic(providers).bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n"],"sourceRoot":""}