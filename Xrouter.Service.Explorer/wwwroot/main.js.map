{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/error/error.component.css","webpack:///./src/app/error/error.component.html","webpack:///./src/app/error/error.component.ts","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/interceptors.ts","webpack:///./src/app/nav-menu/nav-menu.component.css","webpack:///./src/app/nav-menu/nav-menu.component.html","webpack:///./src/app/nav-menu/nav-menu.component.ts","webpack:///./src/app/page-not-found/page-not-found.component.css","webpack:///./src/app/page-not-found/page-not-found.component.html","webpack:///./src/app/page-not-found/page-not-found.component.ts","webpack:///./src/app/rpc-console/rpc-console.component.css","webpack:///./src/app/rpc-console/rpc-console.component.html","webpack:///./src/app/rpc-console/rpc-console.component.ts","webpack:///./src/app/search-form/search-form.component.css","webpack:///./src/app/search-form/search-form.component.html","webpack:///./src/app/search-form/search-form.component.ts","webpack:///./src/app/service-list/service-list.component.ts","webpack:///./src/app/service-node-list/service-node-list.component.css","webpack:///./src/app/service-node-list/service-node-list.component.html","webpack:///./src/app/service-node-list/service-node-list.component.ts","webpack:///./src/app/shared/error-handling/http-error.interceptor.ts","webpack:///./src/app/shared/http-responsetime-logging/http-responsetime-logging.interceptor.ts","webpack:///./src/app/shared/models/appsettings.model..ts","webpack:///./src/app/shared/pagination/pagination.component.ts","webpack:///./src/app/shared/services/base.service.ts","webpack:///./src/app/shared/services/navigator.service..ts","webpack:///./src/app/shared/services/responsetime.service.ts","webpack:///./src/app/shared/services/session.service.ts","webpack:///./src/app/shared/services/xrouter.service.ts","webpack:///./src/app/spv-wallets/spv-wallets.component.css","webpack:///./src/app/spv-wallets/spv-wallets.component.html","webpack:///./src/app/spv-wallets/spv-wallets.component.ts","webpack:///./src/app/view-snode/view-snode.component.css","webpack:///./src/app/view-snode/view-snode.component.html","webpack:///./src/app/view-snode/view-snode.component.ts","webpack:///./src/app/view-spv-wallet/view-spv-wallet.component.css","webpack:///./src/app/view-spv-wallet/view-spv-wallet.component.html","webpack:///./src/app/view-spv-wallet/view-spv-wallet.component.ts","webpack:///./src/app/view-xr-service/view-xr-service.component.css","webpack:///./src/app/view-xr-service/view-xr-service.component.html","webpack:///./src/app/view-xr-service/view-xr-service.component.ts","webpack:///./src/app/xr-services/xr-services.component.css","webpack:///./src/app/xr-services/xr-services.component.html","webpack:///./src/app/xr-services/xr-services.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"@media (max-width: 767px) {\\r\\n  /* On small screens, the nav menu spans the full width of the screen. Leave a space for it. */\\r\\n  .body-content {\\r\\n    padding-top: 50px;\\r\\n  }\\r\\n}\\r\\n\"","module.exports = \"<div class='container-fluid'>\\r\\n  <div class='row'>\\r\\n    <div class='col-sm-3'>\\r\\n      <app-nav-menu></app-nav-menu>\\r\\n    </div>\\r\\n    <div class='col-sm-9 body-content'>\\r\\n      <router-outlet></router-outlet>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { Component, ElementRef } from '@angular/core';\r\nimport { AppSettings } from './shared/models/appsettings.model.';\r\nimport { SessionService } from './shared/services/session.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n\r\n    public title = 'Caplin Systems, Incorporated.';\r\n    public isAuthenicated: Boolean;\r\n    public firstName: string;\r\n    public lastName: string;\r\n\r\n    constructor(private elementRef: ElementRef, private sessionService: SessionService) {\r\n\r\n        // tslint:disable-next-line:prefer-const\r\n        let native = this.elementRef.nativeElement;\r\n\r\n        // tslint:disable-next-line:prefer-const\r\n        let settings = native.getAttribute('settings');\r\n        let appSettings = new AppSettings();\r\n        appSettings = JSON.parse(settings);\r\n\r\n        sessionService.setAppSettings(appSettings);\r\n        this.isAuthenicated = sessionService.isAuthenicated;\r\n\r\n    }\r\n\r\n    public logout(): void {\r\n\r\n    }\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { RouterModule } from '@angular/router';\r\nimport { NgxPaginationModule } from 'ngx-pagination';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { interceptorProviders } from './interceptors';\r\nimport { NavMenuComponent } from './nav-menu/nav-menu.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { PaginationComponent } from './shared/pagination/pagination.component';\r\nimport { ServiceListComponent } from './service-list/service-list.component';\r\nimport { XrServicesComponent } from './xr-services/xr-services.component';\r\nimport { SpvWalletsComponent } from './spv-wallets/spv-wallets.component';\r\nimport { XrouterApiService } from './shared/services/xrouter.service';\r\nimport { ViewXrServiceComponent } from './view-xr-service/view-xr-service.component';\r\nimport { ViewSnodeComponent } from './view-snode/view-snode.component';\r\nimport { PageNotFoundComponent } from './page-not-found/page-not-found.component';\r\nimport { SessionService } from './shared/services/session.service';\r\nimport { HttpErrorInterceptor } from './shared/error-handling/http-error.interceptor';\r\nimport { ViewSpvWalletComponent } from './view-spv-wallet/view-spv-wallet.component';\r\nimport { ServiceNodeListComponent } from './service-node-list/service-node-list.component';\r\nimport { SearchFormComponent } from './search-form/search-form.component';\r\nimport { NavigatorService } from './shared/services/navigator.service.';\r\nimport { ErrorComponent } from './error/error.component';\r\nimport { RpcConsoleComponent } from './rpc-console/rpc-console.component';\r\nimport { ResponseTimeService } from './shared/services/responsetime.service';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    NavMenuComponent,\r\n    HomeComponent,\r\n    PaginationComponent,\r\n    ServiceNodeListComponent,\r\n    ServiceListComponent,\r\n    XrServicesComponent,\r\n    SpvWalletsComponent,\r\n    ViewXrServiceComponent,\r\n    ViewSpvWalletComponent,\r\n    ViewSnodeComponent,\r\n    SearchFormComponent,\r\n    RpcConsoleComponent,\r\n    ErrorComponent,\r\n    PageNotFoundComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule.withServerTransition({ appId: 'ng-cli-universal' }),\r\n    HttpClientModule,\r\n    FormsModule,\r\n    BrowserAnimationsModule,\r\n    ReactiveFormsModule,\r\n    NgxPaginationModule,\r\n    MatAutocompleteModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    RouterModule.forRoot([\r\n      { path: '', component: HomeComponent, pathMatch: 'full' },\r\n      { path: 'xrouter-snodes', component: ServiceNodeListComponent },\r\n      { path: 'spv-wallets', component: SpvWalletsComponent },\r\n      { path: 'spv-wallets/:name', component: ViewSpvWalletComponent, runGuardsAndResolvers: 'always' },\r\n      { path: 'spv-wallets/:name/:nodePubKey', component: ViewSpvWalletComponent, runGuardsAndResolvers: 'always' },\r\n      { path: 'xcloud-services', component: XrServicesComponent },\r\n      { path: 'xcloud-services/:name', component: ViewXrServiceComponent, runGuardsAndResolvers: 'always' },\r\n      { path: 'xcloud-services/:name/:NodePubKey', component: ViewXrServiceComponent, runGuardsAndResolvers: 'always' },\r\n      { path: 'xrouter-snodes/:nodePubKey', component: ViewSnodeComponent},\r\n      { path: 'xrouter-snodes/:nodePubKey/:service', component: ViewSnodeComponent},\r\n      { path: 'rpc-console', component: RpcConsoleComponent},\r\n      { path: 'error', component: ErrorComponent},\r\n      { path: '**', component: PageNotFoundComponent }\r\n      \r\n    ], { \r\n      useHash: true,\r\n      onSameUrlNavigation: 'reload'\r\n    })\r\n  ],\r\n  providers: [\r\n    XrouterApiService, \r\n    SessionService,\r\n    NavigatorService,\r\n    ResponseTimeService,\r\n    // {\r\n    //   provide: HTTP_INTERCEPTORS,\r\n    //   useClass: HttpErrorInterceptor,\r\n    //   multi: true\r\n    // },\r\n    interceptorProviders\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \"\"","module.exports = \"<h1>Something went wrong</h1>\\r\\n<p>Servicenode is probably not properly configured. Servicenode info cannot be retrieved.</p>\\r\\n\\r\\n<h3>Error: {{error.error}}</h3>\\r\\n\"","\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router, ActivatedRouteSnapshot } from '@angular/router';\nimport { isNullOrUndefined } from 'util';\n\n@Component({\n  selector: 'error',\n  templateUrl: './error.component.html',\n  styleUrls: ['./error.component.css']\n})\nexport class ErrorComponent implements OnInit {\n  error:any;\n\n  constructor(    \n    private router:Router, \n    private route: ActivatedRoute) {\n      \n    this.route.queryParams.subscribe(e => this.error = e);\n  }\n\n  ngOnInit() {}\n\n}\n","module.exports = \"<h1>Hello, world!</h1>\\r\\n<p>Welcome to your new single-page application, built with:</p>\\r\\n<ul>\\r\\n  <li><a href='https://get.asp.net/'>ASP.NET Core</a> and <a href='https://msdn.microsoft.com/en-us/library/67ef8sbd.aspx'>C#</a> for cross-platform server-side code</li>\\r\\n  <li><a href='https://angular.io/'>Angular</a> and <a href='http://www.typescriptlang.org/'>TypeScript</a> for client-side code</li>\\r\\n  <li><a href='http://getbootstrap.com/'>Bootstrap</a> for layout and styling</li>\\r\\n</ul>\\r\\n<p>To help you get started, we've also set up:</p>\\r\\n<ul>\\r\\n  <li><strong>Client-side navigation</strong>. For example, click <em>Counter</em> then <em>Back</em> to return here.</li>\\r\\n  <li><strong>Angular CLI integration</strong>. In development mode, there's no need to run <code>ng serve</code>. It runs in the background automatically, so your client-side resources are dynamically built on demand and the page refreshes when you modify any file.</li>\\r\\n  <li><strong>Efficient production builds</strong>. In production mode, development-time features are disabled, and your <code>dotnet publish</code> configuration automatically invokes <code>ng build</code> to produce minified, ahead-of-time compiled JavaScript files.</li>\\r\\n</ul>\\r\\n<p>The <code>ClientApp</code> subdirectory is a standard Angular CLI application. If you open a command prompt in that directory, you can run any <code>ng</code> command (e.g., <code>ng test</code>), or use <code>npm</code> to install extra packages into it.</p>\\r\\n\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n})\r\nexport class HomeComponent {\r\n}\r\n","import {HTTP_INTERCEPTORS} from '@angular/common/http';\r\nimport {HttpErrorInterceptor} from './shared/error-handling/http-error.interceptor';\r\nimport { HttpRequestTimeInterceptor } from './shared/http-responsetime-logging/http-responsetime-logging.interceptor';\r\n\r\nexport const interceptorProviders = \r\n   [\r\n    { provide: HTTP_INTERCEPTORS, useClass: HttpRequestTimeInterceptor, multi: true },\r\n    { provide: HTTP_INTERCEPTORS, useClass: HttpErrorInterceptor, multi: true },\r\n];","module.exports = \"li .glyphicon {\\r\\n    margin-right: 10px;\\r\\n}\\r\\n\\r\\n/* Highlighting rules for nav menu items */\\r\\n\\r\\nli.link-active a,\\r\\nli.link-active a:hover,\\r\\nli.link-active a:focus {\\r\\n    background-color: #4189C7;\\r\\n    color: white;\\r\\n}\\r\\n\\r\\n/* Keep the nav menu independent of scrolling and on top of other items */\\r\\n\\r\\n.main-nav {\\r\\n    position: fixed;\\r\\n    top: 0;\\r\\n    left: 0;\\r\\n    right: 0;\\r\\n    z-index: 1;\\r\\n}\\r\\n\\r\\n@media (min-width: 768px) {\\r\\n    /* On small screens, convert the nav menu to a vertical sidebar */\\r\\n    .main-nav {\\r\\n        height: 100%;\\r\\n        width: calc(25% - 20px);\\r\\n    }\\r\\n    .navbar {\\r\\n        border-radius: 0px;\\r\\n        border-width: 0px;\\r\\n        height: 100%;\\r\\n    }\\r\\n    .navbar-header {\\r\\n        float: none;\\r\\n    }\\r\\n    .navbar-collapse {\\r\\n        border-top: 1px solid #444;\\r\\n        padding: 0px;\\r\\n    }\\r\\n    .navbar ul {\\r\\n        float: none;\\r\\n    }\\r\\n    .navbar li {\\r\\n        float: none;\\r\\n        font-size: 15px;\\r\\n        margin: 6px;\\r\\n    }\\r\\n    .navbar li a {\\r\\n        padding: 10px 16px;\\r\\n        border-radius: 4px;\\r\\n    }\\r\\n    .navbar a {\\r\\n        /* If a menu item's text is too long, truncate it */\\r\\n        width: 100%;\\r\\n        white-space: nowrap;\\r\\n        overflow: hidden;\\r\\n        text-overflow: ellipsis;\\r\\n    }\\r\\n}\\r\\n\"","module.exports = \"<div class='main-nav'>\\r\\n    <div class='navbar navbar-inverse'>\\r\\n        <div class='navbar-header'>\\r\\n            <button type='button' class='navbar-toggle' data-toggle='collapse' data-target='.navbar-collapse' [attr.aria-expanded]='isExpanded' (click)='toggle()'>\\r\\n                <span class='sr-only'>Toggle navigation</span>\\r\\n                <span class='icon-bar'></span>\\r\\n                <span class='icon-bar'></span>\\r\\n                <span class='icon-bar'></span>\\r\\n            </button>\\r\\n            <a class='navbar-brand' [routerLink]='[\\\"/\\\"]'>XRouter Service Explorer</a>\\r\\n            <search-form></search-form>\\r\\n        </div>\\r\\n        <div class='clearfix'></div>\\r\\n        <div class='navbar-collapse collapse' [ngClass]='{ \\\"in\\\": isExpanded }'>\\r\\n            <ul class='nav navbar-nav'>\\r\\n                <li [routerLinkActive]='[\\\"link-active\\\"]' [routerLinkActiveOptions]='{ exact: true }'>\\r\\n                    <a [routerLink]='[\\\"/\\\"]' (click)='collapse()'>\\r\\n                        <span class='glyphicon glyphicon-home'></span> Home\\r\\n                    </a>\\r\\n                </li>\\r\\n                <li [routerLinkActive]='[\\\"link-active\\\"]'>\\r\\n                    <a [routerLink]='[\\\"/xrouter-snodes\\\"]' (click)='collapse()'>\\r\\n                        <span class='glyphicon glyphicon-th-list'></span> XRouter Service Nodes\\r\\n                    </a>\\r\\n                </li>\\r\\n                <li [routerLinkActive]='[\\\"link-active\\\"]'>\\r\\n                    <a [routerLink]='[\\\"/spv-wallets\\\"]' (click)='collapse()'>\\r\\n                        <span class='glyphicon glyphicon-th-list'></span> SPV Wallets\\r\\n                    </a>\\r\\n                </li>\\r\\n                <li [routerLinkActive]='[\\\"link-active\\\"]'>\\r\\n                    <a [routerLink]='[\\\"/xcloud-services\\\"]' (click)='collapse()'>\\r\\n                        <span class='glyphicon glyphicon-th-list'></span> XCloud Services\\r\\n                    </a>\\r\\n                </li>\\r\\n                <!-- <li [routerLinkActive]='[\\\"link-active\\\"]'>\\r\\n                    <a [routerLink]='[\\\"/rpc-console\\\"]' (click)='collapse()'>\\r\\n                        <span class='glyphicon glyphicon-th-list'></span> Rpc Console Sandbox\\r\\n                    </a>\\r\\n                </li> -->\\r\\n            </ul>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-nav-menu',\r\n  templateUrl: './nav-menu.component.html',\r\n  styleUrls: ['./nav-menu.component.css']\r\n})\r\nexport class NavMenuComponent {\r\n  isExpanded = false;\r\n\r\n  collapse() {\r\n    this.isExpanded = false;\r\n  }\r\n\r\n  toggle() {\r\n    this.isExpanded = !this.isExpanded;\r\n  }\r\n}\r\n","module.exports = \"\"","module.exports = \"<p>\\n  page-not-found works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-page-not-found',\n  templateUrl: './page-not-found.component.html',\n  styleUrls: ['./page-not-found.component.css']\n})\nexport class PageNotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"#sandbox,\\r\\n#sandbox .output,\\r\\n#sandbox .output span,\\r\\n#sandbox textarea,\\r\\n#sandbox textarea:focus {\\r\\n\\tfont-size:14px;\\r\\n\\tline-height:1.3;\\r\\n\\tfont-weight: normal;\\r\\n\\tfont-family:\\\"Consolas\\\", \\\"Andale Mono\\\", \\\"Courier New\\\", \\\"Courier\\\", monospace;\\r\\n\\tborder:0 none;\\r\\n\\toutline:0 none;\\r\\n\\tbox-shadow:none;\\r\\n}\\r\\n#sandbox {\\r\\n\\tbackground:#333;\\r\\n\\tcolor: #ccc;\\r\\n\\tpadding:20px 20px 15px;\\r\\n\\tborder-radius: 10px;\\r\\n\\tmargin:30px auto;\\r\\n}\\r\\n#sandbox .output {\\r\\n\\tdisplay:block;\\r\\n\\twhite-space:pre;\\r\\n\\twidth:100%;\\r\\n\\theight:650px;\\r\\n\\toverflow-y:auto;\\r\\n\\tposition:relative;\\r\\n\\tpadding:0;\\r\\n\\tmargin:0 0 10px;\\r\\n\\tborder:0 none;\\r\\n}\\r\\n#sandbox .output span           { color:#f7f7f7; }\\r\\n#sandbox .output span.command   { color:#ccc; }\\r\\n#sandbox .output span.fix    { color:#777; }\\r\\n#sandbox .output span.undefined { color:#777; }\\r\\n#sandbox .output span.string    { color:#99f; }\\r\\n#sandbox .output span.number    { color:#7f7; }\\r\\n#sandbox .output span.error     { color:#f77; }\\r\\n#sandbox .input {\\r\\n\\tpadding:0 0 0 15px;\\r\\n\\tposition:relative;\\r\\n}\\r\\n#sandbox .input:before {\\r\\n\\tcontent:\\\">\\\";\\r\\n\\tposition:absolute;\\r\\n\\ttop: 1px;\\r\\n\\tleft: 0;\\r\\n\\tcolor:#ddd\\r\\n}\\r\\n#sandbox textarea {\\r\\n\\tcolor:#f7f7f7;\\r\\n\\tbackground:#333;\\r\\n\\tborder:0 none;\\r\\n\\toutline:0 none;\\r\\n\\tpadding:0;\\r\\n\\tmargin:0;\\r\\n\\tresize: none;\\r\\n\\twidth:100%;\\r\\n\\toverflow:hidden;\\r\\n}\\r\\n#sandbox textarea:focus {\\r\\n\\toutline:0 none;\\r\\n}\\r\\n#sandbox .output::-webkit-scrollbar,\\r\\n#sandbox .output::-webkit-scrollbar-button,\\r\\n#sandbox .output::-webkit-scrollbar-track,\\r\\n#sandbox .output::-webkit-scrollbar-track-piece,\\r\\n#sandbox .output::-webkit-scrollbar-thumb,\\r\\n#sandbox .output::-webkit-scrollbar-corner,\\r\\n#sandbox .output::-webkit-resizer {\\r\\n\\tbackground: transparent;\\r\\n}\\r\\n#sandbox .output::-webkit-scrollbar {\\r\\n\\twidth:  7px;\\r\\n\\theight: 7px;\\r\\n\\tborder-radius: 4px;\\r\\n}\\r\\n#sandbox .output::-webkit-scrollbar-track-piece {\\r\\n\\tborder-radius: 5px;\\r\\n}\\r\\n#sandbox .output::-webkit-scrollbar-thumb {\\r\\n\\tbackground: #4f4f4f;\\r\\n\\t        border-radius: 5px;\\r\\n}\\r\\n#sandbox .output::-webkit-scrollbar-button {\\r\\n\\twidth:0;\\r\\n\\theight:0;\\r\\n}\"","module.exports = \"<h1>Rpc Console</h1>\\n<div id=\\\"sandbox\\\">\\n  <div class=\\\"output\\\">\\n\\n  </div>\\n  <div class=\\\"input\\\">\\n      <textarea rows=\\\"1\\\" placeholder=\\\"Enter rpc command\\\"></textarea>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-rpc-console',\n  templateUrl: './rpc-console.component.html',\n  styleUrls: ['./rpc-console.component.css']\n})\nexport class RpcConsoleComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div>\\n \\n  <mat-form-field>\\n    <input matInput placeholder=\\\"Search\\\" aria-label=\\\"State\\\" [matAutocomplete]=\\\"auto\\\" [formControl]=\\\"searchServicesCtrl\\\">\\n    <mat-autocomplete #auto=\\\"matAutocomplete\\\" (optionSelected)=\\\"onSelectionChanged($event)\\\">\\n      <mat-option *ngIf=\\\"isLoading\\\" class=\\\"is-loading\\\">Loading...</mat-option>\\n      <ng-container *ngIf=\\\"!isLoading\\\">\\n        <mat-option *ngFor=\\\"let service of filteredServices\\\" [value]=\\\"service.name\\\">\\n          <span><b>{{service.name}}</b></span>\\n        </mat-option>\\n      </ng-container>\\n    </mat-autocomplete>\\n  </mat-form-field>\\n \\n  <br>\\n \\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatAutocompleteModule, MatAutocompleteSelectedEvent } from '@angular/material/autocomplete';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { NavigatorService } from '../shared/services/navigator.service.';\nimport { XrouterApiService } from '../shared/services/xrouter.service';\n\nimport { debounceTime, tap, switchMap, finalize } from 'rxjs/operators';\nimport { HttpClient } from '@angular/common/http';\nimport { BaseService } from '../shared/services/base.service';\nimport { SessionService } from '../shared/services/session.service';\n\n// const NODEPUBKEY_REGEX = '^[0][a-zA-Z0-9]{65}$'; \n// const ADDRESS_REGEX = '^[B][a-zA-Z0-9]{33}$';\n// const TXHASH_REGEX = '[a-zA-Z0-9]{64}$';\n\n@Component({\n  selector: 'search-form',\n  templateUrl: './search-form.component.html',\n  styleUrls: ['./search-form.component.css']\n})\nexport class SearchFormComponent extends BaseService implements OnInit {\n  private readonly apiEndpoint = 'blocknet/xrouter';\n  private baseEndpoint = ''; // http://localhost\n\n  searchServicesCtrl = new FormControl();\n  filteredServices: any;\n  isLoading = false;\n  errorMsg: string;\n\n  constructor(\n    private http: HttpClient,\n    private navigatorService: NavigatorService,\n    private sessionService:SessionService\n  ) {\n    super();\n    this.baseEndpoint = sessionService.getApiURI();\n  }\n\n  ngOnInit() {\n    this.searchServicesCtrl.valueChanges\n      .pipe(\n        debounceTime(500),\n        tap(() => {\n          this.errorMsg = \"\";\n          this.filteredServices = [];\n          this.isLoading = true;\n        }),\n        switchMap(value => this.http.get(this.baseEndpoint + this.apiEndpoint + \"/?searchString=\" + value)\n          .pipe(\n            finalize(() => {\n              this.isLoading = false\n            }),\n          )\n        )\n      )\n      .subscribe(data => {\n        if (data['items'] == undefined) {\n          //this.errorMsg = data['Error'];\n          this.filteredServices = [];\n        } else {\n          this.errorMsg = \"\";\n          this.filteredServices = data['items'];\n        }\n      });\n  }\n\n  onSelectionChanged(event: MatAutocompleteSelectedEvent) {\n    let serviceName = event.option.value as string;\n\n    if(serviceName.includes(\"xrs::\")){\n      this.navigatorService.xCloudServiceDetails(serviceName);\n    } else{\n      this.navigatorService.spvWalletDetails(serviceName);\n    }\n  }\n}\n\n\n","import { Component, OnInit, EventEmitter, Output, Input } from '@angular/core';\n\n@Component({\n  selector: 'service-list',\n  template: `\n        <table class=\"table\">\n            <thead>\n              <tr>\n                <th *ngFor=\"let c of columns\">\n                    <div *ngIf=\"c.isSortable\" (click)=\"sortBy(c.key)\">\n                        {{ c.title }}\n                        <i *ngIf=\"query.sortBy === c.key\" \n                          class=\"fa\"\n                          [class.fa-sort-asc]=\"query.isSortAscending\"\n                          [class.fa-sort-desc]=\"!query.isSortAscending\"\n                        ></i>\n                      </div>\n                      <div *ngIf=\"!c.isSortable\">\n                        {{ c.title }}\n                      </div>\n                </th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr *ngFor=\"let c of services.items\">\n                <td><a [routerLink]=\"[c.name]\">{{c.name}}</a></td>\n                <td>{{c.nodeCount}}</td>\n              </tr>\n            </tbody>\n          </table>\n  `\n})\nexport class ServiceListComponent implements OnInit {\n\n  private readonly PAGE_SIZE = 3; \n\n  @Input('services') services:any = {};\n\n  @Input('query-init') queryInit = {\n    isCurrent:false,\n    clientId:0\n  };\n\n  @Output('query-changed') queryChanged = new EventEmitter();\n\n  query: any = {\n    pageSize: this.PAGE_SIZE\n  };\n  \n  columns:any=[\n    {title: 'Name', key: 'name'},\n    {title: 'Node Count', key: 'nodeCount', isSortable: true},\n    {}\n  ];\n  \n  constructor() { }\n\n  ngOnInit() {\n    this.initializeQuery();\n  }\n\n  ngOnChanges(){\n    this.initializeQuery();\n\t}\n\n  onFilterChange() {\n    this.query.page = 1; \n    this.queryChanged.emit(this.query);\n  }\n\n  private initializeQuery(){\n  }\n\n  resetFilter() {\n    this.query = {\n      page: 1,\n      pageSize: this.PAGE_SIZE,\n    };\n    this.queryChanged.emit(this.query);\n  }\n\n  sortBy(columnName) {\n    if (this.query.sortBy === columnName) {\n      this.query.isSortAscending = !this.query.isSortAscending; \n    } else {\n      this.query.sortBy = columnName;\n      this.query.isSortAscending = true;\n    }\n\n    this.queryChanged.emit(this.query);\n  }\n\n  onPageChange(page) {\n    this.query.page = page;\n    this.queryChanged.emit(this.query);\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<h2>Service Node List</h2>\\n<table class=\\\"table\\\">\\n        <thead>\\n          <tr>\\n                <th>Rank</th>\\n                <th>NodePubKey</th>\\n                <!-- <th>Address</th> -->\\n                <!-- <th>Spv Wallets</th>\\n                <th>XCloud Services</th> -->\\n          </tr> \\n        </thead>\\n        <tbody>\\n                <tr *ngFor=\\\"let sn of serviceNodes; let i = index\\\">\\n                        <td>{{sn.rank}}</td>\\n                        <td>                                \\n                                <a href=\\\"javascript:void(0)\\\" (click)=\\\"onNodeClick(i)\\\"> {{sn.nodePubKey}}</a>\\n                        </td>\\n                        <!-- <td><a href=\\\"https://chainz.cryptoid.info/block/address.dws?{{sn.addr}}\\\">{{sn.addr}}</a></td> -->\\n                        <!-- <td>\\n                                <div class=\\\"form-group\\\">\\n                                        <label for=\\\"spvWallets\\\"></label>\\n                                        <select id=\\\"spvWallets\\\" class=\\\"form-control\\\" (change)=\\\"onSpvWalletChange(i, $event)\\\">\\n                                                <option *ngFor=\\\"let w of sn.spvWallets\\\" [value]=\\\"w\\\">{{ w }} </option>\\n                                        </select>   \\n                                </div> \\n                        </td> -->\\n                        <!-- <td>\\n                                <div *ngIf = \\\"sn.xCloudServices.length > 0\\\">\\n                                        <div class=\\\"form-group\\\">\\n                                                <label for=\\\"xcloudServices\\\"></label>\\n                                                <select id=\\\"xcloudServices\\\" class=\\\"form-control\\\" (change)=\\\"onXCloudServiceChange(i, $event)\\\">\\n                                                        <option *ngFor=\\\"let s of sn.xCloudServices\\\" [value]=\\\"s\\\">{{ s }} </option>\\n                                                </select>   \\n                                        </div> \\n                                </div>\\n                                \\n                        </td> -->\\n                </tr>\\n        </tbody>\\n</table>\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { XrouterApiService } from '../shared/services/xrouter.service';\n\n@Component({\n  selector: 'app-service-node-list',\n  templateUrl: './service-node-list.component.html',\n  styleUrls: ['./service-node-list.component.css']\n})\nexport class ServiceNodeListComponent implements OnInit {\n\n  private readonly PAGE_SIZE = 3; \n\n  serviceNodes:any[];\n  selectedSpvWallets:string[];\n  selectedXCloudServices:string[];\n\n  query:any = {\n    pageSize: this.PAGE_SIZE,\n  };\n  queryPastCourses:any = {\n    pageSize: this.PAGE_SIZE,\n  }; \n\n  constructor(private router: Router, private xrouterService: XrouterApiService) { }\n\n  ngOnInit() {\n    this.populateServiceNodes();\n  }\n\n  private populateServiceNodes(){\n    this.xrouterService.GetServiceNodeList()\n      .subscribe(result => {\n        this.serviceNodes = result;\n\n        this.selectedXCloudServices = new Array<string>(result.length);\n        this.selectedSpvWallets = new Array<string>(result.length);\n        \n        this.serviceNodes.forEach((sn, index) =>{  \n          this.selectedSpvWallets[index] = sn.spvWallets[0];          \n          this.selectedXCloudServices[index] = sn.xCloudServices[0];\n        });\n      });\n  }\n\n  onQueryChange(query){\n    this.query = query;\n    this.populateServiceNodes();\n  }\n\n  onSpvWalletChange(index:number, event:any){\n    this.selectedSpvWallets[index] = event.target.value;    \n  }\n\n  onXCloudServiceChange(index:number, event:any){\n    this.selectedXCloudServices[index] = event.target.value;    \n  }\n\n  // onSpvWalletClick(index:number){\n  //   if(this.selectedSpvWallets[index].includes('x'))\n  //   this.router.navigate(['/spv-wallets', this.selectedSpvWallets[index], this.serviceNodes[index].nodePubKey]);\n  // }\n\n  // onXCloudServiceClick(index:number){\n  //   if(this.selectedXCloudServices[index].includes('x'))\n  //   this.router.navigate(['/xcloud-services', this.selectedXCloudServices[index], this.serviceNodes[index].nodePubKey]);\n  // }\n\n  onNodeClick(index:number){\n    let node = this.serviceNodes[index];\n    this.router.navigate(['/xrouter-snodes', node.nodePubKey]);\n  }\n\n\n}\n","import {\r\n    HttpEvent,\r\n    HttpInterceptor,\r\n    HttpHandler,\r\n    HttpRequest,\r\n    HttpResponse,\r\n    HttpErrorResponse\r\n   } from '@angular/common/http';\r\n   import { Observable, throwError } from 'rxjs';\r\n   import { retry, catchError } from 'rxjs/operators';\r\n   import { Router } from '@angular/router';\r\n   \r\n   export class HttpErrorInterceptor implements HttpInterceptor {\r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n      return next.handle(request)\r\n        .pipe(\r\n          catchError((error: HttpErrorResponse) => {\r\n            let errorMessage = '';\r\n            console.log(error);\r\n            if (error.error instanceof ErrorEvent) {\r\n              // client-side error\r\n              errorMessage = `Error: ${error.error.message}`;\r\n            } else {\r\n              // server-side error\r\n              errorMessage = error.error;\r\n            }\r\n            return throwError(errorMessage);\r\n          })\r\n        )\r\n    }\r\n   }","import {\r\n    HttpEvent,\r\n    HttpInterceptor,\r\n    HttpHandler,\r\n    HttpRequest,\r\n    HttpResponse,\r\n    HttpErrorResponse\r\n   } from '@angular/common/http';\r\n   import { Observable, throwError, ReplaySubject } from 'rxjs';\r\n   import { retry, catchError, map, tap } from 'rxjs/operators';\r\n   import { Router } from '@angular/router';\r\n   import { Injectable } from '@angular/core';\r\n   import { ResponseTimeService } from '../services/responsetime.service';\r\n   \r\n   @Injectable({\r\n    providedIn: 'root'\r\n  })\r\n   export class HttpRequestTimeInterceptor implements HttpInterceptor {\r\n    constructor(private responseTimeService: ResponseTimeService){}\r\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n\r\n      var startTime = (new Date()).getTime();\r\n      return next.handle(req).pipe(\r\n        map(\r\n          (event) => {\r\n            if (event instanceof HttpResponse) {\r\n              var endTime = (new Date()).getTime();\r\n              event = event.clone({ headers: event.headers.set('endTime', endTime.toString()) });\r\n              event = event.clone({ headers: event.headers.set('startTime', startTime.toString()) });\r\n              var diff = endTime - startTime;\r\n  \r\n              console.log(event.url + \" succeeded in \" + diff + \" milli seconds\");\r\n              \r\n            }\r\n            return event;\r\n          }), tap(event => { },\r\n            error => {\r\n              if (error instanceof HttpErrorResponse) {\r\n                var endTime = (new Date()).getTime();\r\n                var diff = endTime - startTime;\r\n                \r\n                console.log(error.url + \" failed in \" + diff + \" milli seconds\");\r\n              }\r\n            }\r\n          )\r\n      );\r\n    }\r\n  }","export class AppSettings {\r\n    public webApiUrl: string;\r\n}\r\n","import { \n\tComponent,\n\tInput, \n\tOutput, \n\tEventEmitter }     from '@angular/core';\nimport { OnChanges } from '@angular/core';\n\n@Component({\n\tselector: 'pagination',\n    template: `\n    <nav *ngIf=\"totalItems > pageSize\" aria-label=\"Course navigation\">\n        <ul class=\"pagination\">\n            <li class=\"page-item\" [class.disabled]=\"currentPage == 1\" >\n                <a class=\"page-link\" (click)=\"previous()\" aria-label=\"Previous\">\n                <span aria-hidden=\"true\">&laquo;</span>\n                </a>\n            </li>\n            <li class=\"page-link\" [class.active]=\"currentPage == page\" *ngFor=\"let page of pages\" (click)=\"changePage(page)\">\n                <a>{{ page }}</a>\n            </li>\n            <li class=\"page-link\" [class.disabled]=\"currentPage == pages.length\">\n                <a (click)=\"next()\" aria-label=\"Next\">\n                <span aria-hidden=\"true\">&raquo;</span>\n                </a>\n            </li>\n        </ul>\n    </nav>  \n`\n})\nexport class PaginationComponent implements OnChanges {\n  \t@Input('total-items') totalItems;\n\t@Input('page-size') pageSize = 10;\n\t@Output('page-changed') pageChanged = new EventEmitter();\n\tpages: any[];\n\tcurrentPage = 1; \n\n\tngOnChanges(){\n    this.currentPage = 1;\n        \n\t\tvar pagesCount = Math.ceil(this.totalItems / this.pageSize); \n\t\tthis.pages = [];\n\t\tfor (var i = 1; i <= pagesCount; i++)\n\t\t\tthis.pages.push(i);\n\t}\n\n\tchangePage(page){\n\t\tthis.currentPage = page; \n\t\tthis.pageChanged.emit(page);\n\t}\n\n\tprevious(){\n\t\tif (this.currentPage == 1)\n\t\t\treturn;\n\n\t\tthis.currentPage--;\n\t\tthis.pageChanged.emit(this.currentPage);\n\t}\n\n\tnext(){\n\t\tif (this.currentPage == this.pages.length)\n\t\t\treturn; \n\t\t\n\t\tthis.currentPage++;\n\t\tthis.pageChanged.emit(this.currentPage);\n\t}\n}","import { Observable } from 'rxjs'\n\n\nexport abstract class BaseService {  \n    \n    constructor() { }\n\n    protected handleError(error: any) {\n    var applicationError = error.headers.get('Application-Error');\n\n    // either applicationError in header or model error in body\n    if (applicationError) {\n      return Observable.throw(applicationError);\n    }\n\n    var modelStateErrors: string = '';\n    var serverError = error.json();\n\n    if (!serverError.type) {\n      for (var key in serverError) {\n        if (serverError[key])\n          modelStateErrors += serverError[key] + '\\n';\n      }\n    }\n\n    modelStateErrors = modelStateErrors = '' ? null : modelStateErrors;\n    return Observable.throw(modelStateErrors || 'Server error');\n  }\n}","\nimport { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\n\n\n@Injectable()\nexport class NavigatorService{\n  private readonly apiEndpoint = 'blocknet/xrouter';\n  private baseEndpoint = ''; // http://localhost\n\n  constructor(private router: Router) {}\n\n  go(path: string) {\n    this.router.navigate([path]);\n  }\n\n  serviceNodeDetails(name: string) {\n    this.go('/xrouter-snodes/' + name);\n  }\n\n  spvWalletDetails(name: string) {\n    this.go('/spv-wallets/' + name);\n  }\n\n  xCloudServiceDetails(name: string) {\n    this.go('/xcloud-services/' + name);\n  }\n\n  \n\n}\n","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\n\n@Injectable()\nexport class ResponseTimeService {\n    getResonseTime: Subject<number> = new Subject<number>();\n    constructor() {}\n\n    onGetResponseTime(event){\n        this.getResonseTime.next(event);\n    }        \n}\n","import { Injectable } from '@angular/core';\nimport { AppSettings } from '../models/appsettings.model.';\n\n@Injectable()\nexport class SessionService {\n\n    appSettings: AppSettings;\n    public isAuthenicated: Boolean;\n\n    constructor() {\n        this.appSettings = new AppSettings();\n        this.isAuthenicated = false;\n    }\n\n    public setAppSettings(appSettings: AppSettings) {\n        this.appSettings = appSettings;\n    }\n\n    getApiURI() {\n        return this.appSettings.webApiUrl;\n    }    \n}\n","import { Injectable } from '@angular/core';\nimport { map } from 'rxjs/operators';\nimport { HttpClient , HttpParams} from '@angular/common/http';\nimport { BaseService } from './base.service';\nimport { isNullOrUndefined } from 'util';\nimport { SessionService } from './session.service';\n\n\n@Injectable()\nexport class XrouterApiService extends BaseService{\n  private readonly apiEndpoint = 'blocknet/xrouter';\n  private baseEndpoint = ''; // http://localhost\n\n  constructor(private http:HttpClient, private sessionService:SessionService) {\n    super();\n    this.baseEndpoint = sessionService.getApiURI();\n   }\n\n  GetNetworkServices(){\n    return this.http.get(this.baseEndpoint + this.apiEndpoint + '/getNetworkServices');\n  }\n\n  GetNetworkSpvWallets(){\n    return this.http.get(this.baseEndpoint + this.apiEndpoint + '/getNetworkSpvWallets');\n  }\n\n  GetServiceInfo(service: string, nodePubKey?: string, node_count:number = 1){\n    let url = this.baseEndpoint + this.apiEndpoint + '/GetServiceInfo/?service=' + service;\n    if(!isNullOrUndefined(nodePubKey)){\n      url += '&nodePubKey=' + nodePubKey;\n    }\n    url += '&node_count=' + node_count;\n    return this.http.get(url);\n  }\n\n  GetSpvWalletInfo(service: string, nodePubKey?: string, node_count:number = 1){\n    let url = this.baseEndpoint + this.apiEndpoint + '/GetSpvWalletInfo/?service=' + service;\n    if(!isNullOrUndefined(nodePubKey)){\n      url += '&nodePubKey=' + nodePubKey;\n    }\n    url += '&node_count=' + node_count;\n    return this.http.get(url);\n  }\n\n  GetNodeInfo(nodePubKey:string, service?:string, node_count:number = 1){\n    let url = this.baseEndpoint + this.apiEndpoint + '/GetNodeInfo/?nodePubKey=' + nodePubKey;\n    if(!isNullOrUndefined(service)){\n      url += '&service=' + service;\n    }\n    url += '&node_count=' + node_count;\n    return this.http.get(url);\n  }\n\n  GetServiceNodeList(){\n    let url = this.baseEndpoint + this.apiEndpoint + '/GetServiceNodeList'\n    return this.http.get<any[]>(url);\n  }\n\n  Service(request:any){\n    let url = this.baseEndpoint + this.apiEndpoint + '/Service';\n    return this.http.post(url, request);\n  }\n\n  GetBlockCount(blockchain:string, node_count:number = 1){\n    let url = this.baseEndpoint + this.apiEndpoint + '/GetBlockCount?blockchain=' + blockchain;\n    url += '&node_count=' + node_count;\n    return this.http.get(url);\n  }\n\n  GetBlockHash(blockchain:string, blockNumber:string, node_count:number = 1){\n    let url = this.baseEndpoint + this.apiEndpoint + '/GetBlockHash?blockchain=' + blockchain;\n    url += '&block_number=' + blockNumber;\n    url += '&node_count=' + node_count;\n\n    return this.http.get(url);\n  }\n\n  GetBlock(blockchain:string, blockHash:string, node_count:number = 1){\n    let url = this.baseEndpoint + this.apiEndpoint + '/GetBlock?blockchain=' + blockchain;\n    url += '&block_hash=' + blockHash;\n    url += '&node_count=' + node_count;\n    return this.http.get(url);\n  }\n\n  GetBlocks(blockchain:string, blockHashes:string[], node_count:number = 1){\n    let url = this.baseEndpoint + this.apiEndpoint + '/GetBlocks';\n\n    let params = new HttpParams();\n    params = params.append('blockchain', blockchain);\n    params = params.append('block_hashes', JSON.stringify(blockHashes));\n    params = params.append('node_count', node_count.toString());\n    return this.http.get(url, {params: params});\n  }\n\n  GetTransaction(blockchain:string, txid:string, node_count:number = 1){\n    let url = this.baseEndpoint + this.apiEndpoint + '/GetTransaction?/blockchain=' + blockchain;\n    url += '&txid=' + txid;\n    url += '&node_count=' + node_count;\n    return this.http.get(url);\n  }\n\n  GetTransactions(blockchain:string, txids:string[], node_count:number = 1){\n    let url = this.baseEndpoint + this.apiEndpoint + '/GetTransactions';\n\n    let params = new HttpParams();\n    params = params.append('blockchain', blockchain);\n    params = params.append('txids', JSON.stringify(txids));\n    params = params.append('node_count', node_count.toString());\n    return this.http.get(url, {params: params});\n  }\n\n  DecodeRawTransaction(blockchain:string, txHex:string, node_count:number = 1){\n    let url = this.baseEndpoint + this.apiEndpoint + '/DecodeRawTransaction?/blockchain=' + blockchain;\n    url += '&txHex=' + txHex;\n    url += '&node_count=' + node_count;\n    return this.http.get(url);\n  }\n\n  SendTransaction(blockchain:string, signedTx:string){\n    let url = this.baseEndpoint + this.apiEndpoint + '/SendTransaction?/blockchain=' + blockchain;\n    url += '&signedTx=' + signedTx;\n    return this.http.get(url);\n  }\n\n\n\n}\n","module.exports = \"\"","module.exports = \"<h2>Spv Wallets</h2>\\n<service-list \\n        [services]=\\\"spvWallets\\\" \\n        [query-init]=\\\"query\\\"\\n        (query-changed)=\\\"onQueryChange($event)\\\">\\n</service-list>\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { XrouterApiService } from '../shared/services/xrouter.service';\n\n@Component({\n  selector: 'app-spv-wallets',\n  templateUrl: './spv-wallets.component.html',\n  styleUrls: ['./spv-wallets.component.css']\n})\nexport class SpvWalletsComponent implements OnInit {\n\n  private readonly PAGE_SIZE = 3; \n\n  spvWallets = {};\n\n  query:any = {\n    pageSize: this.PAGE_SIZE,\n  };\n  queryPastCourses:any = {\n    pageSize: this.PAGE_SIZE,\n  }; \n\n  constructor(private router: Router, private xrouterService: XrouterApiService) { }\n\n  ngOnInit() {\n    this.populateSpvWallets();\n  }\n\n  private populateSpvWallets(){\n    this.xrouterService.GetNetworkSpvWallets()\n      .subscribe(result => this.spvWallets = result);\n  }\n\n  onQueryChange(query){\n    this.query = query;\n    this.populateSpvWallets();\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div *ngIf=\\\"loading else loaded\\\">\\n    Loading page...\\n  </div>\\n\\n<ng-template #loaded>\\n    <h1>Service Node</h1>\\n    <table class=\\\"table\\\">\\n      <tbody>\\n        <tr>\\n          <td>NodePubKey</td>\\n          <td>{{nodePubKey}}</td>\\n        </tr>\\n        <tr>\\n          <td>Score</td>\\n          <td>{{result?.score}}</td>\\n        </tr>\\n        <tr>\\n          <td>Banned</td>\\n          <td>{{result?.banned}}</td>\\n        </tr>\\n        <tr>\\n          <td>Payment Address</td>\\n          <td><a href=\\\"https://chainz.cryptoid.info/block/address.dws?{{result.paymentAddress}}\\\">{{result?.paymentAddress}}</a></td>\\n        </tr>\\n        <tr>\\n          <td>Fee Default</td>\\n          <td>{{result?.feeDefault}} BLOCK</td>\\n        </tr>\\n      </tbody>\\n    </table>\\n    <h3>Config</h3>\\n    <div class=\\\"well overflow-visible\\\" style=\\\"white-space: pre-line\\\">\\n      <code style=\\\"word-wrap: break-word;\\\">{{result?.config}}</code>\\n    </div>\\n    <h3>Fees</h3>\\n    <table class=\\\"table\\\">\\n      <tbody>\\n        <tr *ngFor=\\\"let fee of result.fees | keyvalue\\\">\\n          <td>{{fee.key}}</td>\\n          <td>{{fee.value}} BLOCK</td>\\n        </tr>\\n      </tbody>\\n    </table>\\n\\n    <table class=\\\"table\\\">\\n        <thead>\\n            <tr>\\n                <th>Spv Wallet</th>\\n            </tr>\\n        </thead>\\n        <tbody>\\n          <tr *ngFor=\\\"let s of result?.spvWallets | paginate: config\\\">\\n            <td><a [routerLink]=\\\"['/spv-wallets', 'xr::' + s, nodePubKey]\\\">{{s}}</a></td>\\n          </tr>\\n        </tbody>\\n    </table>\\n    <!-- <pagination-controls (pageChange)=\\\"pageChanged($event)\\\"></pagination-controls> -->\\n    \\n  <h3>XCloud Services offered by this Service Node</h3>\\n\\n  <div *ngIf=\\\"result?.services.length == 0 else notEmpty\\\">\\n      This service node doesn't offer XCloud Services yet :(\\n    </div>\\n    \\n  <ng-template #notEmpty>\\n      <table class=\\\"table\\\">\\n          <thead>\\n              <tr>\\n                  <th>Service</th>\\n              </tr>\\n          </thead>\\n          <tbody>\\n            <tr *ngFor=\\\"let s of result?.services | paginate: config\\\">\\n              <td><a [routerLink]=\\\"['/xcloud-services', 'xrs::' + s]\\\">{{s}}</a></td>\\n            </tr>\\n          </tbody>\\n      </table>\\n      <pagination-controls (pageChange)=\\\"pageChanged($event)\\\"></pagination-controls>\\n    </ng-template>  \\n</ng-template>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Location } from '@angular/common';\nimport { XrouterApiService } from '../shared/services/xrouter.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { isNullOrUndefined } from 'util';\n\n@Component({\n  selector: 'app-view-snode',\n  templateUrl: './view-snode.component.html',\n  styleUrls: ['./view-snode.component.css']\n})\nexport class ViewSnodeComponent implements OnInit {\n  loading:boolean;\n  config:any;\n  nodePubKey:string;\n  service:string;\n  selectedWalletName:string;\n  selectedWallet:any;\n  result:any;\n\n  constructor(\n    private xrouterApiService:XrouterApiService,\n    private router:Router,\n    private route:ActivatedRoute, \n    private location:Location\n  ) \n  { \n    route.params.subscribe(p => {\n      this.nodePubKey = p['nodePubKey'];\n      this.service = p['service'];\n      if (isNullOrUndefined(this.nodePubKey)) {\n        router.navigate(['']);\n        return; \n      }\n      this.loading = true;\n    });\n  }\n\n  ngOnInit() {\n    this.xrouterApiService.GetNodeInfo(this.nodePubKey, this.service)\n      .subscribe(result => {\n        this.result = result;\n        this.selectedWalletName = this.result.spvConfigs[0].spvWallet;\n        this.onWalletChange();\n\n        this.config = {\n          itemsPerPage: 10,\n          currentPage: 1,\n          totalItems: this.result.services.length\n        };\n        this.loading = false;\n      },\n      error => {\n        this.router.navigate(['/error'], {queryParams: error});\n      });\n  }\n\n  onWalletChange(){\n    this.selectedWallet = this.result.spvConfigs.find(c => c.spvWallet === this.selectedWalletName);\n  }\n\n  pageChanged(event){\n    this.config.currentPage = event;\n  }\n\n}","module.exports = \"\"","module.exports = \"<div *ngIf=\\\"loading else loaded\\\">\\n    Loading page...\\n  </div>\\n\\n<ng-template #loaded>\\n  <h1>SPV Wallet</h1>\\n  <h2>{{spvWalletName}}</h2>\\n  \\n  <h3>Commands</h3>\\n  <table class=\\\"table\\\">\\n    <thead>\\n        <tr>\\n            <th>Command</th>\\n            <th>Fee (BLOCK)</th>\\n            <th>Request Limit</th>\\n            <th>Payment Address</th>\\n            <th>Disabled</th>\\n        </tr>\\n    </thead>\\n    <tbody>\\n        <tr *ngFor=\\\"let c of result.spvConfig.commands\\\">\\n            <td>{{c.command}}</td>\\n            <td>{{c.fee}}</td>\\n            <td>{{c.requestLimit}}</td>\\n            <td>{{c.paymentAddress}}</td>\\n            <td>{{c.disabled}}</td>\\n        </tr>\\n    </tbody>\\n  </table>\\n  <hr>\\n  <h3>Try out a {{ spvWalletName }} command</h3>\\n    <form (ngSubmit)=\\\"onSubmit()\\\" #spvWalletForm=\\\"ngForm\\\">\\n      <label for=\\\"spvCommand\\\">Spv Command</label>\\n      <select class=\\\"form-control\\\" [(ngModel)]=\\\"selectedSpvCommand\\\" name=\\\"selectedSpvCommand\\\">\\n          <option *ngFor=\\\"let c of result.spvConfig.commands\\\" [value]=\\\"c.command\\\">{{c.command}}</option>\\n      </select>\\n      <div [ngSwitch]=\\\"selectedSpvCommand\\\">\\n        <div *ngSwitchCase=\\\"'xrGetBlockCount'\\\">\\n          \\n        </div>\\n        <div *ngSwitchCase=\\\"'xrGetBlockHash'\\\">\\n            <label for=\\\"blockNumber\\\">Block Number</label>\\n            <input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"blockNumber\\\" ngModel name=\\\"blockNumber\\\">\\n        </div>\\n        <div *ngSwitchCase=\\\"'xrGetBlock'\\\">\\n            <label for=\\\"blockHash\\\">Block Hash</label>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"blockHash\\\" ngModel name=\\\"blockHash\\\">\\n        </div>\\n        <div *ngSwitchCase=\\\"'xrGetBlocks'\\\">\\n          <h4>Block hash inputs</h4>\\n          <button type=\\\"button\\\" (click)=\\\"addBlockHash()\\\" class=\\\"btn btn-primary btn-sm\\\">Add</button> \\n          <hr>\\n          <div *ngFor=\\\"let bh of blockHashes; let i = index;\\\">\\n              <label for=\\\"blockHash-{{i}}\\\">Blockhash-{{i}}</label>\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"blockHash-{{i}}\\\" [(ngModel)]=\\\"blockHashes[i]\\\" name=\\\"blockHash-{{i}}\\\">\\n              <button type=\\\"button\\\" class=\\\"btn btn-danger btn-sm\\\" (click)=\\\"removeBlockHash(i)\\\">Remove</button>\\n          </div>\\n          <hr>\\n        </div>\\n        <div *ngSwitchCase=\\\"'xrGetTransaction'\\\">\\n            <label for=\\\"txid\\\">Txid</label>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"txid\\\" ngModel name=\\\"txid\\\">\\n        </div>\\n        <div *ngSwitchCase=\\\"'xrGetTransactions'\\\">\\n          <h4>TxId inputs</h4>\\n          <button type=\\\"button\\\" (click)=\\\"addTxId()\\\" class=\\\"btn btn-primary btn-sm\\\">Add</button> \\n          <hr>\\n            <div *ngFor=\\\"let txid of txIds; let i = index;\\\">\\n                <label for=\\\"txid-{{i}}\\\">txid-{{i}}</label>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"txid-{{i}}\\\" [(ngModel)]=\\\"txIds[i]\\\" name=\\\"txid-{{i}}\\\">\\n                <button type=\\\"button\\\" class=\\\"btn btn-danger btn-sm\\\" (click)=\\\"removeTxId(i)\\\">Remove</button>\\n            </div>\\n          <hr>\\n        </div>\\n        <div *ngSwitchCase=\\\"'xrDecodeRawTransaction'\\\">\\n            <label for=\\\"txHex\\\">Tx Hex</label>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"txHex\\\" ngModel name=\\\"txHex\\\">\\n        </div>\\n        <div *ngSwitchCase=\\\"'xrSendTransaction'\\\">\\n            <label for=\\\"signedTx\\\">Signed Tx</label>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"signedTx\\\" ngModel name=\\\"signedTx\\\">\\n        </div>\\n      </div>\\n\\n      <label for=\\\"nodeCount\\\">Node count</label>\\n      <input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"nodeCount\\\"  [(ngModel)]=\\\"nodeCount\\\" name=\\\"nodeCount\\\">\\n      <button type=\\\"submit\\\" class=\\\"btn btn-success\\\">Submit</button>\\n    </form>\\n\\n    Elapsed Time: {{ responseTime }}\\n    <div class=\\\"overflow-auto\\\">\\n      <pre style=\\\"max-height:50vh;\\\">\\n        <div *ngIf=\\\"resultLoading else resultLoaded\\\">\\n          Executing...\\n        </div>\\n      <ng-template #resultLoaded> {{ spvWalletCommandResult | json }}</ng-template>\\n          \\n      </pre>\\n    </div>\\n     \\n  <hr>\\n\\n  <h3>Offered By</h3>\\n  <table class=\\\"table\\\">\\n    <tbody>\\n      <tr>\\n        <td>NodePubKey</td>\\n        <td><a [routerLink]=\\\"['/xrouter-snodes', result.node.nodePubKey]\\\">{{result.node.nodePubKey}}</a></td>\\n      </tr>\\n      <tr>\\n        <td>Score</td>\\n        <td>{{result.node.score}}</td>\\n      </tr>\\n      <tr>\\n        <td>Banned</td>\\n        <td>{{result.node.banned}}</td>\\n      </tr>\\n      <tr>\\n        <td>Default Fee</td>\\n        <td>{{result.node.feeDefault}} BLOCK</td>\\n      </tr>\\n  \\n    </tbody>\\n  </table>\\n  \\n  <h3>Other Service Nodes that offer this service</h3>\\n  <table class=\\\"table\\\">\\n    <thead>\\n      <tr>\\n        <th>Address</th>\\n        <th>Score</th>\\n        <th>Banned</th>\\n      </tr>\\n    </thead>\\n    <tbody>\\n      <tr *ngFor=\\\"let s of result.otherNodes\\\">\\n        <td><a [routerLink]=\\\"['/xrouter-snodes', s.nodePubKey]\\\">{{s.nodePubKey}}</a></td>\\n        <td>{{s.score}}</td>\\n        <td>{{s.banned}}</td>\\n      </tr>\\n    </tbody>\\n  </table>\\n</ng-template>  \"","import { Component, OnInit, OnDestroy, ViewChild } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Location } from '@angular/common';\nimport { XrouterApiService } from '../shared/services/xrouter.service';\nimport { Router, ActivatedRoute, NavigationEnd } from '@angular/router';\nimport { isNullOrUndefined } from 'util';\nimport { finalize } from 'rxjs/operators';\nimport { HttpRequestTimeInterceptor } from '../shared/http-responsetime-logging/http-responsetime-logging.interceptor';\nimport { forkJoin, Observable } from 'rxjs';\nimport { ResponseTimeService } from '../shared/services/responsetime.service';\n\n@Component({\n  selector: 'app-view-spv-wallet',\n  templateUrl: './view-spv-wallet.component.html',\n  styleUrls: ['./view-spv-wallet.component.css']\n})\nexport class ViewSpvWalletComponent implements OnInit, OnDestroy {\n  navigationSubscription;\n  loading:boolean;\n  spvWalletName:string;\n  nodePubKey:string;\n  nodeCount:number;\n  result:any;\n\n  @ViewChild('spvWalletForm') spvWalletForm: NgForm;\n  selectedSpvCommand:string;\n  blockHashes:string[] = [\"\"];\n  txIds:string[] = [\"\"];\n  \n  resultLoading:boolean;\n  spvWalletCommandResult:any;\n  // spvWalletCommandReply:any;\n  // spvWalletCommandError:string;\n  responseTime:number;\n\n  constructor(\n    private xrouterApiService:XrouterApiService,\n    private responseTimeService: ResponseTimeService,\n    private router:Router,\n    private route:ActivatedRoute, \n    private location:Location\n    ) \n    { \n      route.params.subscribe(p => {\n        this.spvWalletName = p['name'];\n        this.nodePubKey = p['nodePubKey'];\n        if (isNullOrUndefined(this.spvWalletName)) {\n          router.navigate(['']);\n          return; \n        }\n        this.loading = true;\n      });\n\n      this.navigationSubscription = this.router.events.subscribe((e:any) => {\n        if(e instanceof NavigationEnd){\n          this.initializeData();\n        }\n      });\n    }\n\n  private initializeData(){\n    this.xrouterApiService.GetSpvWalletInfo(this.spvWalletName, this.nodePubKey)\n        .subscribe(result => {\n          this.result = result;\n          this.location.replaceState(\"/spv-wallets/\" + this.spvWalletName + \"/\" + this.result.node.nodePubKey);\n          this.spvWalletName = this.spvWalletName.replace(\"xr::\", \"\");\n          this.loading = false;\n          \n          this.selectedSpvCommand = this.result.spvConfig.commands[0].command;\n          this.nodeCount = 1;\n          this.resultLoading = false;\n        },\n        error => {\n          this.router.navigate(['/error'], {queryParams: error});\n        });\n  }\n\n  private callXrouterCommand(callback:Observable<object>){\n    callback.pipe(\n          finalize(() => {\n            this.resultLoading = false;\n        }))\n        .subscribe(result => {\n          this.spvWalletCommandResult = result          \n          this.responseTime = this.spvWalletCommandResult.elapsed_time;\n          \n        },\n        error => {\n          this.spvWalletCommandResult = error;\n        });\n  }\n\n  onSubmit() {\n    this.resultLoading = true;\n    let nodecount = this.spvWalletForm.value.nodeCount;\n    switch(this.spvWalletForm.value.selectedSpvCommand){\n      case \"xrGetBlockCount\":{  \n        this.callXrouterCommand(this.xrouterApiService.GetBlockCount(this.spvWalletName, nodecount));\n        break;    \n      }\n      case \"xrGetBlockHash\":{\n        this.callXrouterCommand(this.xrouterApiService.GetBlockHash(this.spvWalletName, this.spvWalletForm.value.blockNumber, nodecount));        \n        break;\n      }\n      case \"xrGetBlock\":{\n        this.callXrouterCommand(this.xrouterApiService.GetBlock(this.spvWalletName, this.spvWalletForm.value.blockHash, nodecount));\n        break;\n      }\n      case \"xrGetBlocks\":{\n        this.callXrouterCommand(this.xrouterApiService.GetBlocks(this.spvWalletName, this.blockHashes, nodecount));\n        break;\n      }\n      case \"xrGetTransaction\":{\n        this.callXrouterCommand(this.xrouterApiService.GetTransaction(this.spvWalletName, this.spvWalletForm.value.txid, nodecount));\n        break;\n      }\n      case \"xrGetTransactions\":{\n        this.callXrouterCommand(this.xrouterApiService.GetTransactions(this.spvWalletName, this.txIds, nodecount));\n        break;\n      }\n      case \"xrDecodeRawTransaction\":{\n        this.callXrouterCommand(this.xrouterApiService.DecodeRawTransaction(this.spvWalletName, this.spvWalletForm.value.txHex, nodecount))        \n        break;\n      }\n      case \"xrSendTransaction\":{\n        this.callXrouterCommand(this.xrouterApiService.SendTransaction(this.spvWalletName, this.spvWalletForm.value.signedTx));\n        break;\n      }\n    }\n  }\n\n  addTxId(){\n    this.txIds.push(\"\");\n  }\n\n  removeTxId(index: number){\n    this.txIds.splice(index, 1);\n  }\n\n  addBlockHash(){\n    this.blockHashes.push(\"\");\n  }\n\n  removeBlockHash(index: number){\n    this.blockHashes.splice(index, 1);\n  }\n\n  ngOnInit() {}\n  ngOnDestroy(){\n    if (this.navigationSubscription) {\n      this.navigationSubscription.unsubscribe();\n    }\n  }\n}\n\n\n","module.exports = \"\"","module.exports = \"<div *ngIf=\\\"loading else loaded\\\">\\n  Loading page...\\n</div>\\n\\n<ng-template #loaded>\\n    <h1>XCloud Service</h1>\\n    <h2>{{serviceName}}</h2>\\n    <table class=\\\"table\\\">\\n      <tbody>\\n      <tr>\\n        <td>Fee</td>\\n        <td>{{result.service.fee}} BLOCK</td>\\n      <tr>\\n          <td>Parameter Types</td>\\n          <td>{{result.service.parameters}}</td>\\n      </tr>\\n      <tr>\\n        <td>Description</td>\\n        <td>{{result.service.helpDescription}}</td>\\n      </tr>\\n      <tr>\\n          <td>Usage Instructions</td>\\n          <td>xrService {{serviceName}} [{{result.service.parameters}}]</td>\\n      </tr>\\n      </tbody>\\n    </table>\\n\\n    <h3>Try it out</h3>\\n    <form (ngSubmit)=\\\"onSubmit()\\\" #serviceForm=\\\"ngForm\\\">\\n      <div class=\\\"form-group\\\" *ngFor=\\\"let p of result.service.parametersList; let i = index\\\">\\n        <label for=\\\"param-{{i}}\\\">Param-{{i}} [{{p}}] </label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"param-{{i}}\\\" [(ngModel)]=\\\"parametervalues[i]\\\" name=\\\"param-{{i}}\\\">\\n      </div>\\n      <button type=\\\"submit\\\" class=\\\"btn btn-success\\\">Submit</button>\\n    </form> \\n    \\n    <div class=\\\"overflow-auto\\\">\\n      <pre style=\\\"max-height:50vh;\\\">\\n        <div *ngIf=\\\"resultLoading else resultLoaded\\\">\\n          Executing...\\n        </div>\\n        <ng-template #resultLoaded> {{ serviceResult | json }}</ng-template>\\n      </pre>\\n    </div>\\n    \\n    <h3>Offered By</h3>\\n    <table class=\\\"table\\\">\\n      <tbody>\\n        <tr>\\n          <td>NodePubKey</td>\\n          <td><a [routerLink]=\\\"['/xrouter-snodes', result.node.nodePubKey]\\\">{{result.node.nodePubKey}}</a></td>\\n        </tr>\\n        <tr>\\n          <td>Score</td>\\n          <td>{{result.node.score}}</td>\\n        </tr>\\n        <tr>\\n          <td>Banned</td>\\n          <td>{{result.node.banned}}</td>\\n        </tr>\\n        <tr>\\n          <td>Default Fee</td>\\n          <td>{{result.node.feeDefault}} BLOCK</td>\\n        </tr>\\n    \\n      </tbody>\\n    </table>\\n    \\n    <h3>Configuration {{serviceName}}.conf</h3>\\n    <div class=\\\"well\\\" style=\\\"white-space: pre-line\\\">\\n      <code>{{result.service.config}}</code>\\n    </div>\\n    \\n    <!-- <h3>Other Service Nodes that offer this service</h3>\\n    <table class=\\\"table\\\">\\n      <thead>\\n        <tr>\\n          <th>Address</th>\\n          <th>Score</th>\\n          <th>Banned</th>\\n        </tr>\\n      </thead>\\n      <tbody>\\n        <tr *ngFor=\\\"let s of result.otherNodes\\\">\\n          <td><a [routerLink]=\\\"['/xrouter-snodes', s.nodePubKey]\\\">{{s.nodePubKey}}</a></td>\\n          <td>{{s.score}}</td>\\n          <td>{{s.banned}}</td>\\n        </tr>\\n      </tbody>\\n    </table>   -->\\n</ng-template>  \"","import { Component, OnInit, OnDestroy, ViewChild } from '@angular/core';\nimport { Location } from '@angular/common';\nimport { XrouterApiService } from '../shared/services/xrouter.service';\nimport { Router, ActivatedRoute, NavigationEnd } from '@angular/router';\nimport { isNullOrUndefined } from 'util';\nimport { NgForm } from '@angular/forms';\nimport { finalize } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-view-xr-service',\n  templateUrl: './view-xr-service.component.html',\n  styleUrls: ['./view-xr-service.component.css']\n})\nexport class ViewXrServiceComponent implements OnInit, OnDestroy {\n  navigationSubscription;\n  loading:boolean = true;\n  serviceName:string;\n  result:any;\n  parametervalues:string[];\n\n  @ViewChild('serviceForm') serviceForm: NgForm;\n  serviceResult:any;\n  resultLoading:boolean;\n\n  constructor(\n    private xrouterApiService:XrouterApiService,\n    private router:Router,\n    private route:ActivatedRoute, \n    private location:Location\n    ) \n    { \n      route.params.subscribe(p => {\n        this.serviceName = p['name'];\n        if (isNullOrUndefined(this.serviceName)) {\n          router.navigate(['']);\n          return; \n        }\n      });\n\n      this.navigationSubscription = this.router.events.subscribe((e:any) => {\n        if(e instanceof NavigationEnd){\n          this.initializeData();\n        }\n      });\n    }\n\n  private initializeData(){\n    this.xrouterApiService.GetServiceInfo(this.serviceName)\n      .subscribe(result => {\n        this.result = result;\n        this.location.replaceState(\"/xcloud-services/\" + this.serviceName + \"/\" + this.result.node.nodePubKey);\n        this.serviceName = this.serviceName.replace(\"xrs::\",\"\");\n        if(this.result.service.parametersList)\n          this.parametervalues = new Array<string>(this.result.service.parametersList.length);\n\n        this.loading = false;\n        this.resultLoading = false;\n      },\n      error => {\n        this.router.navigate(['/error'], {queryParams: error});\n      });\n  }\n  ngOnInit() {}\n\n  onSubmit() {  \n    this.resultLoading = true; \n    this.xrouterApiService.Service(new ServiceRequest('xrs::' + this.serviceName, this.parametervalues, 1))\n    .pipe(\n      finalize(() => {\n        this.resultLoading = false;\n    }))  \n    .subscribe(result => {\n        this.serviceResult = result;\n      },\n      error => {\n        this.router.navigate(['/error'], {queryParams: error})\n      });    \n  }\n\n  ngOnDestroy(){\n    if (this.navigationSubscription) {\n      this.navigationSubscription.unsubscribe();\n    }\n  }\n\n}\n\nclass ServiceRequest{\n  constructor(\n    service:string,\n    parameters:string[],\n    nodecount:number\n  ) { \n    this.service = service;\n    this.parameters = parameters;\n    this.nodecount = nodecount;\n   }\n  \n   service:string;\n   parameters:string[];\n   nodecount:number;\n}\n\n\n","module.exports = \"\"","module.exports = \"<h2>XCloud Services</h2>\\n<service-list \\n        [services]=\\\"services\\\" \\n        [query-init]=\\\"query\\\"\\n        (query-changed)=\\\"onQueryChange($event)\\\">\\n</service-list>\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { XrouterApiService } from '../shared/services/xrouter.service';\n\n@Component({\n  selector: 'app-services',\n  templateUrl: './xr-services.component.html',\n  styleUrls: ['./xr-services.component.css']\n})\nexport class XrServicesComponent implements OnInit {\n\n  private readonly PAGE_SIZE = 3; \n\n  services = {};\n\n  query:any = {\n    pageSize: this.PAGE_SIZE,\n  };\n  queryPastCourses:any = {\n    pageSize: this.PAGE_SIZE,\n  }; \n\n  constructor(private router: Router, private xrouterService: XrouterApiService) { }\n\n  ngOnInit() {\n    this.populateServices();\n  }\n\n  private populateServices(){\n    this.xrouterService.GetNetworkServices()\n      .subscribe(result => {\n        this.services = result;\n      });\n  }\n\n  onQueryChange(query){\n    this.query = query;\n    this.populateServices();\n  }\n}\n","// The file contents for the current environment will overwrite these during build.\r\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\r\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\r\n// The list of which env maps to which file can be found in `.angular-cli.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nexport function getBaseUrl() {\r\n  return document.getElementsByTagName('base')[0].href;\r\n}\r\n\r\nconst providers = [\r\n  { provide: 'BASE_URL', useFactory: getBaseUrl, deps: [] }\r\n];\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic(providers).bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n"],"sourceRoot":""}