{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/nav-menu/nav-menu.component.css","webpack:///./src/app/nav-menu/nav-menu.component.html","webpack:///./src/app/nav-menu/nav-menu.component.ts","webpack:///./src/app/page-not-found/page-not-found.component.css","webpack:///./src/app/page-not-found/page-not-found.component.html","webpack:///./src/app/page-not-found/page-not-found.component.ts","webpack:///./src/app/service-list/service-list.component.ts","webpack:///./src/app/shared/error-handling/http-error.interceptor.ts","webpack:///./src/app/shared/models/appsettings.model..ts","webpack:///./src/app/shared/pagination/pagination.component.ts","webpack:///./src/app/shared/services/base.service.ts","webpack:///./src/app/shared/services/session.service.ts","webpack:///./src/app/shared/services/xrouter.service.ts","webpack:///./src/app/spv-wallets/spv-wallets.component.css","webpack:///./src/app/spv-wallets/spv-wallets.component.html","webpack:///./src/app/spv-wallets/spv-wallets.component.ts","webpack:///./src/app/view-snode/view-snode.component.css","webpack:///./src/app/view-snode/view-snode.component.html","webpack:///./src/app/view-snode/view-snode.component.ts","webpack:///./src/app/view-xr-service/view-xr-service.component.css","webpack:///./src/app/view-xr-service/view-xr-service.component.html","webpack:///./src/app/view-xr-service/view-xr-service.component.ts","webpack:///./src/app/xr-services/xr-services.component.css","webpack:///./src/app/xr-services/xr-services.component.html","webpack:///./src/app/xr-services/xr-services.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"@media (max-width: 767px) {\\r\\n  /* On small screens, the nav menu spans the full width of the screen. Leave a space for it. */\\r\\n  .body-content {\\r\\n    padding-top: 50px;\\r\\n  }\\r\\n}\\r\\n\"","module.exports = \"<div class='container-fluid'>\\r\\n  <div class='row'>\\r\\n    <div class='col-sm-3'>\\r\\n      <app-nav-menu></app-nav-menu>\\r\\n    </div>\\r\\n    <div class='col-sm-9 body-content'>\\r\\n      <router-outlet></router-outlet>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { Component, ElementRef } from '@angular/core';\r\nimport { AppSettings } from './shared/models/appsettings.model.';\r\nimport { SessionService } from './shared/services/session.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n\r\n    public title = 'Caplin Systems, Incorporated.';\r\n    public isAuthenicated: Boolean;\r\n    public firstName: string;\r\n    public lastName: string;\r\n\r\n    constructor(private elementRef: ElementRef, private sessionService: SessionService) {\r\n\r\n        // tslint:disable-next-line:prefer-const\r\n        let native = this.elementRef.nativeElement;\r\n\r\n        // tslint:disable-next-line:prefer-const\r\n        let settings = native.getAttribute('settings');\r\n        let appSettings = new AppSettings();\r\n        appSettings = JSON.parse(settings);\r\n\r\n        sessionService.setAppSettings(appSettings);\r\n        this.isAuthenicated = sessionService.isAuthenicated;\r\n\r\n    }\r\n\r\n    public logout(): void {\r\n\r\n    }\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { RouterModule } from '@angular/router';\r\nimport { NgxPaginationModule } from 'ngx-pagination';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { NavMenuComponent } from './nav-menu/nav-menu.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { PaginationComponent } from './shared/pagination/pagination.component';\r\nimport { ServiceListComponent } from './service-list/service-list.component';\r\nimport { XrServicesComponent } from './xr-services/xr-services.component';\r\nimport { SpvWalletsComponent } from './spv-wallets/spv-wallets.component';\r\nimport { XrouterApiService } from './shared/services/xrouter.service';\r\nimport { ViewXrServiceComponent } from './view-xr-service/view-xr-service.component';\r\nimport { ViewSnodeComponent } from './view-snode/view-snode.component';\r\nimport { PageNotFoundComponent } from './page-not-found/page-not-found.component';\r\nimport { SessionService } from './shared/services/session.service';\r\nimport { HttpErrorInterceptor } from './shared/error-handling/http-error.interceptor';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    NavMenuComponent,\r\n    HomeComponent,\r\n    PaginationComponent,\r\n    ServiceListComponent,\r\n    XrServicesComponent,\r\n    SpvWalletsComponent,\r\n    ViewXrServiceComponent,\r\n    ViewSnodeComponent,\r\n    PageNotFoundComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule.withServerTransition({ appId: 'ng-cli-universal' }),\r\n    HttpClientModule,\r\n    FormsModule,\r\n    NgxPaginationModule,\r\n    RouterModule.forRoot([\r\n      { path: '', component: HomeComponent, pathMatch: 'full' },\r\n      { path: 'xrouter-services', component: SpvWalletsComponent },\r\n      { path: 'xcloud-services', component: XrServicesComponent },\r\n      { path: 'xcloud-services/:name', component: ViewXrServiceComponent },\r\n      { path: 'xrouter-snode/:nodePubKey', component: ViewSnodeComponent},\r\n      { path: 'spv-wallets', component: SpvWalletsComponent },\r\n      { path: '**', component: PageNotFoundComponent }\r\n      \r\n      \r\n    ])\r\n  ],\r\n  providers: [\r\n    XrouterApiService, \r\n    SessionService,\r\n    {\r\n      provide: HTTP_INTERCEPTORS,\r\n      useClass: HttpErrorInterceptor,\r\n      multi: true\r\n    }\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \"<h1>Hello, world!</h1>\\r\\n<p>Welcome to your new single-page application, built with:</p>\\r\\n<ul>\\r\\n  <li><a href='https://get.asp.net/'>ASP.NET Core</a> and <a href='https://msdn.microsoft.com/en-us/library/67ef8sbd.aspx'>C#</a> for cross-platform server-side code</li>\\r\\n  <li><a href='https://angular.io/'>Angular</a> and <a href='http://www.typescriptlang.org/'>TypeScript</a> for client-side code</li>\\r\\n  <li><a href='http://getbootstrap.com/'>Bootstrap</a> for layout and styling</li>\\r\\n</ul>\\r\\n<p>To help you get started, we've also set up:</p>\\r\\n<ul>\\r\\n  <li><strong>Client-side navigation</strong>. For example, click <em>Counter</em> then <em>Back</em> to return here.</li>\\r\\n  <li><strong>Angular CLI integration</strong>. In development mode, there's no need to run <code>ng serve</code>. It runs in the background automatically, so your client-side resources are dynamically built on demand and the page refreshes when you modify any file.</li>\\r\\n  <li><strong>Efficient production builds</strong>. In production mode, development-time features are disabled, and your <code>dotnet publish</code> configuration automatically invokes <code>ng build</code> to produce minified, ahead-of-time compiled JavaScript files.</li>\\r\\n</ul>\\r\\n<p>The <code>ClientApp</code> subdirectory is a standard Angular CLI application. If you open a command prompt in that directory, you can run any <code>ng</code> command (e.g., <code>ng test</code>), or use <code>npm</code> to install extra packages into it.</p>\\r\\n\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n})\r\nexport class HomeComponent {\r\n}\r\n","module.exports = \"li .glyphicon {\\r\\n    margin-right: 10px;\\r\\n}\\r\\n\\r\\n/* Highlighting rules for nav menu items */\\r\\n\\r\\nli.link-active a,\\r\\nli.link-active a:hover,\\r\\nli.link-active a:focus {\\r\\n    background-color: #4189C7;\\r\\n    color: white;\\r\\n}\\r\\n\\r\\n/* Keep the nav menu independent of scrolling and on top of other items */\\r\\n\\r\\n.main-nav {\\r\\n    position: fixed;\\r\\n    top: 0;\\r\\n    left: 0;\\r\\n    right: 0;\\r\\n    z-index: 1;\\r\\n}\\r\\n\\r\\n@media (min-width: 768px) {\\r\\n    /* On small screens, convert the nav menu to a vertical sidebar */\\r\\n    .main-nav {\\r\\n        height: 100%;\\r\\n        width: calc(25% - 20px);\\r\\n    }\\r\\n    .navbar {\\r\\n        border-radius: 0px;\\r\\n        border-width: 0px;\\r\\n        height: 100%;\\r\\n    }\\r\\n    .navbar-header {\\r\\n        float: none;\\r\\n    }\\r\\n    .navbar-collapse {\\r\\n        border-top: 1px solid #444;\\r\\n        padding: 0px;\\r\\n    }\\r\\n    .navbar ul {\\r\\n        float: none;\\r\\n    }\\r\\n    .navbar li {\\r\\n        float: none;\\r\\n        font-size: 15px;\\r\\n        margin: 6px;\\r\\n    }\\r\\n    .navbar li a {\\r\\n        padding: 10px 16px;\\r\\n        border-radius: 4px;\\r\\n    }\\r\\n    .navbar a {\\r\\n        /* If a menu item's text is too long, truncate it */\\r\\n        width: 100%;\\r\\n        white-space: nowrap;\\r\\n        overflow: hidden;\\r\\n        text-overflow: ellipsis;\\r\\n    }\\r\\n}\\r\\n\"","module.exports = \"<div class='main-nav'>\\r\\n    <div class='navbar navbar-inverse'>\\r\\n        <div class='navbar-header'>\\r\\n            <button type='button' class='navbar-toggle' data-toggle='collapse' data-target='.navbar-collapse' [attr.aria-expanded]='isExpanded' (click)='toggle()'>\\r\\n                <span class='sr-only'>Toggle navigation</span>\\r\\n                <span class='icon-bar'></span>\\r\\n                <span class='icon-bar'></span>\\r\\n                <span class='icon-bar'></span>\\r\\n            </button>\\r\\n            <a class='navbar-brand' [routerLink]='[\\\"/\\\"]'>blocknet_xrouter</a>\\r\\n        </div>\\r\\n        <div class='clearfix'></div>\\r\\n        <div class='navbar-collapse collapse' [ngClass]='{ \\\"in\\\": isExpanded }'>\\r\\n            <ul class='nav navbar-nav'>\\r\\n                <li [routerLinkActive]='[\\\"link-active\\\"]' [routerLinkActiveOptions]='{ exact: true }'>\\r\\n                    <a [routerLink]='[\\\"/\\\"]' (click)='collapse()'>\\r\\n                        <span class='glyphicon glyphicon-home'></span> Home\\r\\n                    </a>\\r\\n                </li>\\r\\n                <li [routerLinkActive]='[\\\"link-active\\\"]'>\\r\\n                    <a [routerLink]='[\\\"/xrouter-services\\\"]' (click)='collapse()'>\\r\\n                        <span class='glyphicon glyphicon-th-list'></span> XRouter Services\\r\\n                    </a>\\r\\n                </li>\\r\\n                <li [routerLinkActive]='[\\\"link-active\\\"]'>\\r\\n                    <a [routerLink]='[\\\"/xcloud-services\\\"]' (click)='collapse()'>\\r\\n                        <span class='glyphicon glyphicon-th-list'></span> XCloud Services\\r\\n                    </a>\\r\\n                </li>\\r\\n            </ul>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-nav-menu',\r\n  templateUrl: './nav-menu.component.html',\r\n  styleUrls: ['./nav-menu.component.css']\r\n})\r\nexport class NavMenuComponent {\r\n  isExpanded = false;\r\n\r\n  collapse() {\r\n    this.isExpanded = false;\r\n  }\r\n\r\n  toggle() {\r\n    this.isExpanded = !this.isExpanded;\r\n  }\r\n}\r\n","module.exports = \"\"","module.exports = \"<p>\\n  page-not-found works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-page-not-found',\n  templateUrl: './page-not-found.component.html',\n  styleUrls: ['./page-not-found.component.css']\n})\nexport class PageNotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Component, OnInit, EventEmitter, Output, Input } from '@angular/core';\n\n@Component({\n  selector: 'service-list',\n  template: `\n        <table class=\"table\">\n            <thead>\n              <tr>\n                <th *ngFor=\"let c of columns\">\n                    <div *ngIf=\"c.isSortable\" (click)=\"sortBy(c.key)\">\n                        {{ c.title }}\n                        <i *ngIf=\"query.sortBy === c.key\" \n                          class=\"fa\"\n                          [class.fa-sort-asc]=\"query.isSortAscending\"\n                          [class.fa-sort-desc]=\"!query.isSortAscending\"\n                        ></i>\n                      </div>\n                      <div *ngIf=\"!c.isSortable\">\n                        {{ c.title }}\n                      </div>\n                </th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr *ngFor=\"let c of services.items\">\n                <td><a [routerLink]=\"[c.name]\">{{c.name}}</a></td>\n                <td>{{c.nodeCount}}</td>\n              </tr>\n            </tbody>\n          </table>\n  `\n})\nexport class ServiceListComponent implements OnInit {\n\n  private readonly PAGE_SIZE = 3; \n\n  @Input('services') services:any = {};\n\n  @Input('query-init') queryInit = {\n    isCurrent:false,\n    clientId:0\n  };\n\n  @Output('query-changed') queryChanged = new EventEmitter();\n\n  query: any = {\n    pageSize: this.PAGE_SIZE\n  };\n  \n  columns:any=[\n    {title: 'Name', key: 'name'},\n    {title: 'Node Count', key: 'nodeCount', isSortable: true},\n    {}\n  ];\n  \n  constructor() { }\n\n  ngOnInit() {\n    this.initializeQuery();\n  }\n\n  ngOnChanges(){\n    this.initializeQuery();\n\t}\n\n  onFilterChange() {\n    this.query.page = 1; \n    this.queryChanged.emit(this.query);\n  }\n\n  private initializeQuery(){\n  }\n\n  resetFilter() {\n    this.query = {\n      page: 1,\n      pageSize: this.PAGE_SIZE,\n    };\n    this.queryChanged.emit(this.query);\n  }\n\n  sortBy(columnName) {\n    if (this.query.sortBy === columnName) {\n      this.query.isSortAscending = !this.query.isSortAscending; \n    } else {\n      this.query.sortBy = columnName;\n      this.query.isSortAscending = true;\n    }\n\n    this.queryChanged.emit(this.query);\n  }\n\n  onPageChange(page) {\n    this.query.page = page;\n    this.queryChanged.emit(this.query);\n  }\n\n}\n","import {\r\n    HttpEvent,\r\n    HttpInterceptor,\r\n    HttpHandler,\r\n    HttpRequest,\r\n    HttpResponse,\r\n    HttpErrorResponse\r\n   } from '@angular/common/http';\r\n   import { Observable, throwError } from 'rxjs';\r\n   import { retry, catchError } from 'rxjs/operators';\r\n   \r\n   export class HttpErrorInterceptor implements HttpInterceptor {\r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n      return next.handle(request)\r\n        .pipe(\r\n          retry(1),\r\n          catchError((error: HttpErrorResponse) => {\r\n            let errorMessage = '';\r\n            console.log(error);\r\n            if (error.error instanceof ErrorEvent) {\r\n              // client-side error\r\n              errorMessage = `Error: ${error.error.message}`;\r\n            } else {\r\n              // server-side error\r\n              errorMessage = `Error Code: ${error.status}\\nMessage: ${error.message}`;\r\n            }\r\n            window.alert(errorMessage);\r\n            return throwError(errorMessage);\r\n          })\r\n        )\r\n    }\r\n   }","export class AppSettings {\r\n    public webApiUrl: string;\r\n}\r\n","import { \n\tComponent,\n\tInput, \n\tOutput, \n\tEventEmitter }     from '@angular/core';\nimport { OnChanges } from '@angular/core';\n\n@Component({\n\tselector: 'pagination',\n    template: `\n    <nav *ngIf=\"totalItems > pageSize\" aria-label=\"Course navigation\">\n        <ul class=\"pagination\">\n            <li class=\"page-item\" [class.disabled]=\"currentPage == 1\" >\n                <a class=\"page-link\" (click)=\"previous()\" aria-label=\"Previous\">\n                <span aria-hidden=\"true\">&laquo;</span>\n                </a>\n            </li>\n            <li class=\"page-link\" [class.active]=\"currentPage == page\" *ngFor=\"let page of pages\" (click)=\"changePage(page)\">\n                <a>{{ page }}</a>\n            </li>\n            <li class=\"page-link\" [class.disabled]=\"currentPage == pages.length\">\n                <a (click)=\"next()\" aria-label=\"Next\">\n                <span aria-hidden=\"true\">&raquo;</span>\n                </a>\n            </li>\n        </ul>\n    </nav>  \n`\n})\nexport class PaginationComponent implements OnChanges {\n  \t@Input('total-items') totalItems;\n\t@Input('page-size') pageSize = 10;\n\t@Output('page-changed') pageChanged = new EventEmitter();\n\tpages: any[];\n\tcurrentPage = 1; \n\n\tngOnChanges(){\n    this.currentPage = 1;\n        \n\t\tvar pagesCount = Math.ceil(this.totalItems / this.pageSize); \n\t\tthis.pages = [];\n\t\tfor (var i = 1; i <= pagesCount; i++)\n\t\t\tthis.pages.push(i);\n\t}\n\n\tchangePage(page){\n\t\tthis.currentPage = page; \n\t\tthis.pageChanged.emit(page);\n\t}\n\n\tprevious(){\n\t\tif (this.currentPage == 1)\n\t\t\treturn;\n\n\t\tthis.currentPage--;\n\t\tthis.pageChanged.emit(this.currentPage);\n\t}\n\n\tnext(){\n\t\tif (this.currentPage == this.pages.length)\n\t\t\treturn; \n\t\t\n\t\tthis.currentPage++;\n\t\tthis.pageChanged.emit(this.currentPage);\n\t}\n}","import { Observable } from 'rxjs'\n\n\nexport abstract class BaseService {  \n    \n    constructor() { }\n\n    protected handleError(error: any) {\n    var applicationError = error.headers.get('Application-Error');\n\n    // either applicationError in header or model error in body\n    if (applicationError) {\n      return Observable.throw(applicationError);\n    }\n\n    var modelStateErrors: string = '';\n    var serverError = error.json();\n\n    if (!serverError.type) {\n      for (var key in serverError) {\n        if (serverError[key])\n          modelStateErrors += serverError[key] + '\\n';\n      }\n    }\n\n    modelStateErrors = modelStateErrors = '' ? null : modelStateErrors;\n    return Observable.throw(modelStateErrors || 'Server error');\n  }\n}","import { Injectable } from '@angular/core';\nimport { AppSettings } from '../models/appsettings.model.';\n\n@Injectable()\nexport class SessionService {\n\n    appSettings: AppSettings;\n    public isAuthenicated: Boolean;\n\n    constructor() {\n        this.appSettings = new AppSettings();\n        this.isAuthenicated = false;\n    }\n\n    public setAppSettings(appSettings: AppSettings) {\n        this.appSettings = appSettings;\n    }\n\n    getApiURI() {\n        return this.appSettings.webApiUrl;\n    }    \n}\n","import { Injectable } from '@angular/core';\nimport { map } from 'rxjs/operators';\nimport { HttpClient } from '@angular/common/http';\nimport { BaseService } from './base.service';\nimport { isNullOrUndefined } from 'util';\nimport { SessionService } from './session.service';\n\n\n@Injectable()\nexport class XrouterApiService extends BaseService{\n  private readonly apiEndpoint = 'blocknet/xrouter';\n  private baseEndpoint = ''; // http://localhost\n\n  constructor(private http:HttpClient, private sessionService:SessionService) {\n    super();\n    this.baseEndpoint = sessionService.getApiURI();\n   }\n\n  GetNetworkServices(){\n    return this.http.get(this.baseEndpoint + this.apiEndpoint + '/getNetworkServices');\n  }\n\n  GetNetworkSpvWallets(){\n    return this.http.get(this.baseEndpoint + this.apiEndpoint + '/getNetworkSpvWallets');\n  }\n\n  GetServiceInfo(service: string, nodePubKey?: string, node_count:number = 1){\n    let url = this.baseEndpoint + this.apiEndpoint + '/GetServiceInfo/?service=' + service;\n    if(!isNullOrUndefined(nodePubKey)){\n      url += '&nodePubKey=' + nodePubKey;\n    }\n    url += '&node_count=' + node_count;\n    return this.http.get<XrouterServiceInfo>(url);\n  }\n\n  GetNodeInfo(nodePubKey:string){\n    let url = this.baseEndpoint + this.apiEndpoint + '/GetNodeInfo/?nodePubKey=' + nodePubKey;\n    console.log(url);\n    return this.http.get<ServiceNode>(url);\n  }\n}\n","module.exports = \"\"","module.exports = \"<h2>Xrouter Services</h2>\\n<service-list \\n        [services]=\\\"spvWallets\\\" \\n        [query-init]=\\\"query\\\"\\n        (query-changed)=\\\"onQueryChange($event)\\\">\\n</service-list>\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { XrouterApiService } from '../shared/services/xrouter.service';\n\n@Component({\n  selector: 'app-spv-wallets',\n  templateUrl: './spv-wallets.component.html',\n  styleUrls: ['./spv-wallets.component.css']\n})\nexport class SpvWalletsComponent implements OnInit {\n\n  private readonly PAGE_SIZE = 3; \n\n  spvWallets = {};\n\n  query:any = {\n    pageSize: this.PAGE_SIZE,\n  };\n  queryPastCourses:any = {\n    pageSize: this.PAGE_SIZE,\n  }; \n\n  constructor(private router: Router, private xrouterService: XrouterApiService) { }\n\n  ngOnInit() {\n    this.populateSpvWallets();\n  }\n\n  private populateSpvWallets(){\n    this.xrouterService.GetNetworkSpvWallets()\n      .subscribe(result => this.spvWallets = result);\n  }\n\n  onQueryChange(query){\n    this.query = query;\n    this.populateSpvWallets();\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div *ngIf=\\\"isLoaded\\\">\\n    <h1>Service Node</h1>\\n    <table class=\\\"table\\\">\\n      <tbody>\\n        <tr>\\n          <td>NodePubKey</td>\\n          <td>{{nodePubKey}}</td>\\n        </tr>\\n        <tr>\\n          <td>Score</td>\\n          <td>{{result.score}}</td>\\n        </tr>\\n        <tr>\\n          <td>Banned</td>\\n          <td>{{result.banned}}</td>\\n        </tr>\\n        <tr>\\n          <td>Payment Address</td>\\n          <td><a href=\\\"https://chainz.cryptoid.info/block/address.dws?{{result.paymentAddress}}\\\">{{result.paymentAddress}}</a></td>\\n        </tr>\\n        <tr>\\n          <td>Fee Default</td>\\n          <td>{{result.feeDefault}} BLOCK</td>\\n        </tr>\\n      </tbody>\\n    </table>\\n    <h3>Fees</h3>\\n    <table class=\\\"table\\\">\\n      <tbody>\\n        <tr *ngFor=\\\"let fee of result.fees | keyvalue\\\">\\n          <td>{{fee.key}}</td>\\n          <td>{{fee.value}} BLOCK</td>\\n        </tr>\\n      </tbody>\\n    </table>\\n\\n    <div class=\\\"form-group\\\">\\n      <h3>SPV Wallets</h3>\\n        <label for=\\\"spvWallets\\\"></label>\\n        <select id=\\\"spvWallets\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"selectedWalletName\\\" (change)=\\\"onWalletChange()\\\">\\n            <option *ngFor=\\\"let wallet of result.spvWallets\\\" [value]=\\\"wallet\\\">{{ wallet }}</option>\\n        </select>  \\n    </div>\\n    <table class=\\\"table\\\">\\n      <thead>\\n          <tr>\\n              <th>Command</th>\\n              <th>Fee (BLOCK)</th>\\n              <th>Request Limit</th>\\n              <th>Payment Address</th>\\n              <th>Disabled</th>\\n          </tr>\\n      </thead>\\n      <tbody>\\n          <tr *ngFor=\\\"let c of selectedWallet.commands\\\">\\n              <td>{{c.command}}</td>\\n              <td>{{c.fee}}</td>\\n              <td>{{c.requestLimit}}</td>\\n              <td>{{c.paymentAddress}}</td>\\n              <td>{{c.disabled}}</td>\\n          </tr>\\n      </tbody>\\n  </table>\\n  <h3>Services offered by this Service Node</h3>\\n  <div>\\n    <table class=\\\"table\\\">\\n        <thead>\\n            <tr>\\n                <th>Service</th>\\n            </tr>\\n        </thead>\\n        <tbody>\\n          <tr *ngFor=\\\"let s of result?.services | paginate: config\\\">\\n            <td><a [routerLink]=\\\"['/xrouter-services', 'xrs::' + s]\\\">{{s}}</a></td>\\n          </tr>\\n        </tbody>\\n    </table>\\n    <pagination-controls (pageChange)=\\\"pageChanged($event)\\\"></pagination-controls>\\n  </div>\\n</div>  \"","import { Component, OnInit } from '@angular/core';\nimport { Location } from '@angular/common';\nimport { XrouterApiService } from '../shared/services/xrouter.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { isNullOrUndefined } from 'util';\n\n@Component({\n  selector: 'app-view-snode',\n  templateUrl: './view-snode.component.html',\n  styleUrls: ['./view-snode.component.css']\n})\nexport class ViewSnodeComponent implements OnInit {\n  isLoaded:boolean = false;\n  config:any;\n  nodePubKey:string;\n  selectedWalletName:string;\n  selectedWallet:any;\n  result:any;\n\n  constructor(\n    private xrouterApiService:XrouterApiService,\n    private router:Router,\n    private route:ActivatedRoute, \n    private location:Location\n  ) \n  { \n    route.params.subscribe(p => {\n      this.nodePubKey = p['nodePubKey'];\n      if (isNullOrUndefined(this.nodePubKey)) {\n        router.navigate(['']);\n        return; \n      }\n    });\n  }\n\n  ngOnInit() {\n    this.xrouterApiService.GetNodeInfo(this.nodePubKey)\n      .subscribe(result => {\n        this.result = result;\n        this.selectedWalletName = this.result.spvConfigs[0].spvWallet;\n        this.onWalletChange();\n        this.isLoaded = true;\n\n        this.config = {\n          itemsPerPage: 10,\n          currentPage: 1,\n          totalItems: this.result.services.length\n        };\n      });\n  }\n\n  onWalletChange(){\n    this.selectedWallet = this.result.spvConfigs.find(c => c.spvWallet === this.selectedWalletName);\n  }\n\n  pageChanged(event){\n    this.config.currentPage = event;\n  }\n\n}","module.exports = \"\"","module.exports = \"<div *ngIf=\\\"isLoaded\\\">\\n    <h1>XCloud Service</h1>\\n    <h2>{{serviceName}}</h2>\\n    <table class=\\\"table\\\">\\n      <tbody>\\n      <tr>\\n        <td>Fee</td>\\n        <td>{{result.service.fee}} BLOCK</td>\\n      <tr>\\n          <td>Parameter Types</td>\\n          <td>{{result.service.parameters}}</td>\\n      </tr>\\n      <tr>\\n        <td>Description</td>\\n        <td>{{result.service.helpDescription}}</td>\\n      </tr>\\n      <tr>\\n          <td>Usage Instructions</td>\\n          <td>xrService {{serviceName}} [{{result.service.parameters}}]</td>\\n      </tr>\\n      </tbody>\\n    </table>\\n    \\n    <h3>Offered By</h3>\\n    <table class=\\\"table\\\">\\n      <tbody>\\n        <tr>\\n          <td>NodePubKey</td>\\n          <td><a [routerLink]=\\\"['/xrouter-snode', result.node.nodePubKey]\\\">{{result.node.nodePubKey}}</a></td>\\n        </tr>\\n        <tr>\\n          <td>Score</td>\\n          <td>{{result.node.score}}</td>\\n        </tr>\\n        <tr>\\n          <td>Banned</td>\\n          <td>{{result.node.banned}}</td>\\n        </tr>\\n        <tr>\\n          <td>Default Fee</td>\\n          <td>{{result.node.feeDefault}} BLOCK</td>\\n        </tr>\\n    \\n      </tbody>\\n    </table>\\n    \\n    <h3>Configuration {{serviceName}}.conf</h3>\\n    <div class=\\\"well\\\" style=\\\"white-space: pre-line\\\">\\n      <code>{{result.service.config}}</code>\\n    </div>\\n    \\n    <h3>Other Service Nodes that offer this service</h3>\\n    <table class=\\\"table\\\">\\n      <thead>\\n        <tr>\\n          <th>Address</th>\\n          <th>Score</th>\\n          <th>Banned</th>\\n        </tr>\\n      </thead>\\n      <tbody>\\n        <tr *ngFor=\\\"let s of result.otherNodes\\\">\\n          <td><a [routerLink]=\\\"['/xrouter-snode', s.nodePubKey]\\\">{{s.nodePubKey}}</a></td>\\n          <td>{{s.score}}</td>\\n          <td>{{s.banned}}</td>\\n        </tr>\\n      </tbody>\\n    </table>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Location } from '@angular/common';\nimport { XrouterApiService } from '../shared/services/xrouter.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { isNullOrUndefined } from 'util';\n\n@Component({\n  selector: 'app-view-xr-service',\n  templateUrl: './view-xr-service.component.html',\n  styleUrls: ['./view-xr-service.component.css']\n})\nexport class ViewXrServiceComponent implements OnInit {\n  isLoaded:boolean = false;\n  serviceName:string;\n  result:XrouterServiceInfo;\n\n  constructor(\n    private xrouterApiService:XrouterApiService,\n    private router:Router,\n    private route:ActivatedRoute, \n    private location:Location\n    ) \n    { \n      route.params.subscribe(p => {\n        this.serviceName = p['name'];\n        if (isNullOrUndefined(this.serviceName)) {\n          router.navigate(['']);\n          return; \n        }\n        \n      });\n    }\n\n  ngOnInit() {\n    this.xrouterApiService.GetServiceInfo(this.serviceName)\n      .subscribe(result => {\n        this.result = result;\n        this.location.replaceState(\"xrouter-services/\" + this.serviceName + \"/\" + this.result.node.nodePubKey);\n        this.serviceName = this.serviceName.replace(\"xrs::\",\"\");\n        this.isLoaded = true;\n      });\n      \n  }\n\n}\n\n\n","module.exports = \"\"","module.exports = \"<h2>XCloud Services</h2>\\n<service-list \\n        [services]=\\\"services\\\" \\n        [query-init]=\\\"query\\\"\\n        (query-changed)=\\\"onQueryChange($event)\\\">\\n</service-list>\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { XrouterApiService } from '../shared/services/xrouter.service';\n\n@Component({\n  selector: 'app-services',\n  templateUrl: './xr-services.component.html',\n  styleUrls: ['./xr-services.component.css']\n})\nexport class XrServicesComponent implements OnInit {\n\n  private readonly PAGE_SIZE = 3; \n\n  services = {};\n\n  query:any = {\n    pageSize: this.PAGE_SIZE,\n  };\n  queryPastCourses:any = {\n    pageSize: this.PAGE_SIZE,\n  }; \n\n  constructor(private router: Router, private xrouterService: XrouterApiService) { }\n\n  ngOnInit() {\n    this.populateServices();\n  }\n\n  private populateServices(){\n    this.xrouterService.GetNetworkServices()\n      .subscribe(result => {\n        this.services = result;\n      });\n  }\n\n  onQueryChange(query){\n    this.query = query;\n    this.populateServices();\n  }\n}\n","// The file contents for the current environment will overwrite these during build.\r\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\r\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\r\n// The list of which env maps to which file can be found in `.angular-cli.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nexport function getBaseUrl() {\r\n  return document.getElementsByTagName('base')[0].href;\r\n}\r\n\r\nconst providers = [\r\n  { provide: 'BASE_URL', useFactory: getBaseUrl, deps: [] }\r\n];\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic(providers).bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n"],"sourceRoot":""}